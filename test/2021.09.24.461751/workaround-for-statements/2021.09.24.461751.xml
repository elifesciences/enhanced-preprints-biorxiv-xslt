<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.2d1 20170631//EN" "JATS-archivearticle1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" article-type="article" dtd-version="1.2d1" specific-use="production" xml:lang="en">
<front>
<journal-meta>
<journal-id journal-id-type="publisher-id">BIORXIV</journal-id>
<journal-title-group>
<journal-title>bioRxiv</journal-title>
<abbrev-journal-title abbrev-type="publisher">bioRxiv</abbrev-journal-title>
</journal-title-group>
<publisher>
<publisher-name>Cold Spring Harbor Laboratory</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="doi">10.1101/2021.09.24.461751</article-id>
<article-version>1.2</article-version>
<article-categories>
<subj-group subj-group-type="author-type">
<subject>Regular Article</subject>
</subj-group>
<subj-group subj-group-type="heading">
<subject>New Results</subject>
</subj-group>
<subj-group subj-group-type="hwp-journal-coll">
<subject>Neuroscience</subject>
</subj-group>
</article-categories>
<title-group>
<article-title>Endotaxis: A neuromorphic algorithm for mapping, goal-learning, navigation, and patrolling</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name><surname>Zhang</surname><given-names>Tony</given-names></name>
<xref ref-type="aff" rid="a1">1</xref>
</contrib>
<contrib contrib-type="author">
<name><surname>Rosenberg</surname><given-names>Matthew</given-names></name>
<xref ref-type="aff" rid="a1">1</xref>
</contrib>
<contrib contrib-type="author">
<name><surname>Perona</surname><given-names>Pietro</given-names></name>
<xref ref-type="aff" rid="a2">2</xref>
</contrib>
<contrib contrib-type="author" corresp="yes"><name><surname>Meister</surname><given-names>Markus</given-names></name><email>meister@caltech.edu</email><xref ref-type="aff" rid="a1">1</xref>
</contrib>
<aff id="a1"><label>1</label><institution>Division of Biology and Biological Engineering, California Institute of Technology</institution></aff>
<aff id="a2"><label>2</label><institution>Division of Engineering and Applied Science, California Institute of Technology</institution></aff>
</contrib-group>
<author-notes>
<fn fn-type="others"><p>{<email>tonyzhang@caltech.edu</email>, <email>mhrosenberg@caltech.edu</email>, <email>perona@caltech.edu</email>, <email>meister@caltech.edu</email>}</p></fn>
</author-notes>
<pub-date pub-type="epub">
<year>2022</year>
</pub-date>
<elocation-id>2021.09.24.461751</elocation-id>
<history>
<date date-type="received">
<day>24</day>
<month>9</month>
<year>2021</year>
</date>
<date date-type="rev-recd">
<day>10</day>
<month>10</month>
<year>2022</year>
</date>
<date date-type="accepted">
<day>10</day>
<month>10</month>
<year>2022</year>
</date>
</history>
<permissions>
<copyright-statement>&#x00A9; 2022, Posted by Cold Spring Harbor Laboratory</copyright-statement>
<copyright-year>2022</copyright-year>
<license license-type="creative-commons" xlink:href="http://creativecommons.org/licenses/by/4.0/"><license-p>This pre-print is available under a Creative Commons License (Attribution 4.0 International), CC BY 4.0, as described at <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link></license-p></license>
</permissions>
<self-uri xlink:href="461751.pdf" content-type="pdf" xlink:role="full-text"/>
<abstract>
<title>Abstract</title>
<p>An animal entering a new environment typically faces three challenges: explore the space for resources, memorize their locations, and navigate towards those targets as needed. Experimental work on exploration, mapping, and navigation has mostly focused on simple environments &#x2013; such as an open arena [<xref ref-type="bibr" rid="c55">55</xref>], a pond [<xref ref-type="bibr" rid="c35">35</xref>], or a desert [<xref ref-type="bibr" rid="c37">37</xref>] &#x2013; and much has been learned about neural signals in diverse brain areas under these conditions [<xref ref-type="bibr" rid="c11">11</xref>, <xref ref-type="bibr" rid="c45">45</xref>]. However, many natural environments are highly complex, such as a system of burrows, or of intersecting paths through the underbrush. The same applies to many cognitive tasks, that typically allow only a limited set of actions at any given stage in the process. Here we propose an algorithm that learns the structure of a complex environment, discovers useful targets during exploration, and navigates back to those targets by the shortest path. It makes use of a behavioral module common to all motile animals, namely the ability to follow an odor to its source [<xref ref-type="bibr" rid="c4">4</xref>]. We show how the brain can learn to generate internal &#x201C;virtual odors&#x201D; that guide the animal to any location of interest. This <italic>endotaxis</italic> algorithm can be implemented with a simple 3-layer neural circuit using only biologically realistic structures and learning rules. Several neural components of this scheme are found in brains from insects to humans. Nature may have evolved a general mechanism for search and navigation on the ancient backbone of chemotaxis.</p>
</abstract>
<counts>
<page-count count="31"/>
</counts>
</article-meta>
<notes>
<notes notes-type="competing-interest-statement">
<title>Competing Interest Statement</title><p>The authors have declared no competing interest.</p></notes>
<fn-group content-type="summary-of-updates">
<title>Summary of Updates:</title>
<fn fn-type="update"><p>All new Figures 2-10.
Better theory section.
Serious treatment of noise.
Added treatment of homing and patrolling.
</p></fn>
</fn-group>
<fn-group content-type="external-links">
<fn fn-type="dataset"><p>
<ext-link ext-link-type="uri" xlink:href="https://github.com/markusmeister/Endotaxis-2022">https://github.com/markusmeister/Endotaxis-2022</ext-link>
</p></fn>
</fn-group>
</notes>
</front>
<body>
<sec id="s1">
<label>1</label>
<title>Introduction</title>
<p>Animals navigate their environment to look for resources &#x2013; such as shelter, food, or a mate &#x2013; and to exploit such resources once they are found. Efficient navigation requires knowing the structure of the environment: which locations are connected to which others [<xref ref-type="bibr" rid="c53">53</xref>]. One would like to understand how the brain acquires that knowledge, what neural representation it adopts for the resulting map, how it tags significant locations in that map, and how that knowledge gets read out for decision-making during navigation. Here we propose a mechanism that solves all these problems and operates reliably in diverse and complex environments.</p>
<p>One algorithm for finding a valuable resource is common to all animals: chemotaxis. Every motile species has a way to track odors through the environment, either to find the source of the odor or to avoid it [<xref ref-type="bibr" rid="c4">4</xref>]. This ability is central to finding food, connecting with a mate, and avoiding predators. It is believed that brains originally evolved to organize the motor response in pursuit of chemical stimuli. Indeed some of the oldest regions of the mammalian brain, including the hippocampus, seem organized around an axis that processes smells [<xref ref-type="bibr" rid="c1">1</xref>, <xref ref-type="bibr" rid="c28">28</xref>].</p>
<p>The specifics of chemotaxis, namely the methods for finding an odor and tracking it, vary by species, but the toolkit always includes a search strategy based on trial-and-error: Try various actions that you have available, then settle on the one that makes the odor stronger [<xref ref-type="bibr" rid="c4">4</xref>]. For example a rodent will weave its head side-to-side, sampling the local odor gradient, then move in the direction where the smell is stronger. Worms and maggots follow the same strategy. Dogs track a ground-borne odor trail by casting across it side-to-side. Flying insects perform similar casting flights. Bacteria randomly change direction every now and then, and continue straight as long as the odor improves [<xref ref-type="bibr" rid="c6">6</xref>]. We propose that this universal behavioral module for chemotaxis can be harnessed to solve general problems of search and navigation in a complex environment, even when tell-tale odors are not available.</p>
<p>For concreteness, consider a mouse exploring a labyrinth of tunnels (<xref rid="fig1" ref-type="fig">Fig 1A</xref>). The maze may contain a source of food that emits an odor (<xref rid="fig1" ref-type="fig">Fig 1A1</xref>). That odor will be strongest at the source and decline with distance along the tunnels of the maze. The mouse can navigate to the food location by simply following the odor gradient uphill. Suppose that the mouse discovers some other interesting locations that <italic>do not</italic> emit a smell, like a source of water, or the exit from the labyrinth (<xref rid="fig1" ref-type="fig">Fig 1A2-3</xref>). It would be convenient if the mouse could tag such a location with an odorous material, so it may be found easily on future occasions. Ideally, the mouse would carry with it multiple such odor tags, so it can mark different targets each with its specific recognizable odor.</p>
<fig id="fig1" position="float" fig-type="figure">
<label>Figure 1:</label>
<caption><title>A mechanism for endotaxis.</title>
<p><bold>A:</bold> A constrained environment of tunnels linked by intersections, with special locations offering food, water, and the exit. <bold>1:</bold> A real odor emitted by the food source decreases with distance (shading). <bold>2:</bold> A virtual odor tagged to the water source. <bold>3:</bold> A virtual odor tagged to the exit. <bold>4:</bold> Abstract representation of this environment by a graph of nodes (intersections) and edges (tunnels). <bold>B:</bold> A neural circuit to implement endotaxis. Open circles: four populations of neurons that represent &#x201C;resource&#x201D;, &#x201C;point&#x201D;, &#x201C;map&#x201D;, and &#x201C;goal&#x201D;. Arrows: signal flow. Solid circles: synapses. Point cells have small receptive fields localized in the environment and excite map cells. Map cells excite each other (green synapses) and also excite goal cells (blue synapses). Resource cells signal the presence of a resource, e.g. cheese, water, or the exit. Map synapses and goal synapses are modified by activity-dependent plasticity. A &#x201C;mode&#x201D; switch selects among various goal signals depending on the animal&#x2019;s need. They may be virtual odors (water, exit) or real odors (cheese). Another goal cell (clock) may report how recently the agent has visited a location. The output of the mode switch gets fed to the chemotaxis module for gradient ascent. Mathematical symbols used in the text: <italic>u</italic><sub><italic>i</italic></sub> is the output of a point cell at location <italic>i, &#x03BD;</italic><sub><italic>i</italic></sub> is the output of the corresponding map cell, <bold>M</bold> is the matrix of synaptic weights among map cells, <bold>G</bold> are the synaptic weights from the map cells onto goal cells, and <italic>r</italic><sub><italic>k</italic></sub> is the output of goal cell <italic>k</italic>.</p></caption>
<graphic xlink:href="461751v2_fig1.tif"/>
</fig>
<p>Here we show that such tagging does not need to be physical. Instead we propose a mechanism by which the mouse&#x2019;s brain may compute a &#x201C;virtual odor&#x201D; signal that declines with distance from a chosen target. That neural signal can be made available to the chemotaxis module as though it were a real odor, enabling navigation up the gradient towards the target. Because this goal signal is computed in the brain rather than sensed externally, we call this hypothetical process <italic>endotaxis</italic>.</p>
<p>The developments reported here were inspired by a recent experimental study with mice navigating a complex labyrinth [<xref ref-type="bibr" rid="c43">43</xref>] that includes 63 three-way junctions. Among other things, we observed that mice could learn the location of a resource in the labyrinth after encountering it just once, and perfect a direct route to that target location after &#x223C;10 encounters. Furthermore, they could navigate back out of the labyrinth using a direct route they had not traveled before, even on the first attempt. Finally, the animals spent most of their waking time patrolling the labyrinth, even long after they had perfected the routes to rewarding locations. These patrols covered the environment efficiently, avoiding repeat visits to the same location. All this happened within a few hours of the animal&#x2019;s first encounter with the labyrinth. Our modeling efforts here are aimed at explaining these remarkable phenomena of rapid spatial learning in a new environment: one-shot learning of a goal location, zero-shot learning of a return route, and efficient patrolling of a complex maze. In particular we want to do so with a biologically plausible mechanism that could be built out of neurons.</p>
</sec>
<sec id="s2">
<label>2</label>
<title>A neural circuit to implement endotaxis</title>
<p><xref rid="fig1" ref-type="fig">Figure 1B</xref> presents a neural circuit model that implements three goals: mapping the connectivity of the environment; tagging of goal locations with a virtual odor; and navigation towards those goals. The model includes four types of neurons: resource cells, point cells, map cells, and goal cells.</p>
<sec id="s2a">
<title>Resource cells</title>
<p>These are sensory neurons that fire when the animal encounters an interesting resource, for example water or food, that may form a target for future navigation. Each resource cell is selective for a specific kind of stimulus. The circuitry that produces these responses is not part of the model.</p>
</sec>
<sec id="s2b">
<title>Point cells</title>
<p>This layer of cells represents the animal&#x2019;s location. <sup><xref ref-type="fn" rid="FN1">1</xref></sup> Each neuron in this population has a small response field within the environment. The neuron fires when the animal enters that response field. We assume that these point cells exist from the outset as soon as the animal enters the environment. Each cell&#x2019;s response field is defined by some conjunction of external and internal sensory signals at that location.</p>
</sec>
<sec id="s2c">
<title>Map cells</title>
<p>This layer of neurons learns the structure of the environment, namely how the various locations are connected in space. The map cells get excitatory input from point cells with low convergence: Each map cell should collect input from only one or a few point cells. These input synapses are static. The map cells also excite each other with all-to-all connections. These recurrent synapses are modifiable according to a local plasticity rule. After learning, they represent the topology of the environment.</p>
</sec>
<sec id="s2d">
<title>Goal cells</title>
<p>Each goal cell serves to mark the locations of a special resource in the map of the environment. The goal cell receives excitatory input from a resource cell, which gets activated whenever that resource is present. It also receives excitatory synapses from map cells. Those synapses are strengthened when the presynaptic map cell is active at the same time as the resource cell.</p>
<p>After the map and goal synapses have been learned, each goal cell carries a virtual odor signal for its assigned resource. The signal increases systematically as the animal moves closer to a location with that resource. A mode switch selects one among many possible virtual odors (or real odors) to be routed to the chemotaxis module for odor tracking. <sup><xref ref-type="fn" rid="FN2">2</xref></sup> The animal then pursues its chemotaxis search strategy to maximize that odor, which leads it to the selected tagged location.</p>
<sec id="s2d1">
<label>2.1</label>
<title>Why does the circuit work?</title>
<p>The key insight is that the output of the goal cell declines systematically with the distance of the animal from the target location. This relationship holds even if the environment is constrained with a complex connectivity graph (<xref rid="fig1" ref-type="fig">Fig 1A4</xref>). Here we explain how this comes about, with mathematical details to follow.</p>
<p>As the animal explores a new environment, when it moves from one location to an adjacent one, those two point cells fire in rapid succession. That leads to a Hebbian strengthening of the excitatory synapses between the two corresponding map cells (<xref rid="fig2" ref-type="fig">Fig 2A-B</xref>). In this way the recurrent network of map cells learns the connectivity of the graph that describes the environment. To a first approximation, the matrix of synaptic connections among the map cells will converge to the correlation matrix of their inputs [<xref ref-type="bibr" rid="c14">14</xref>, <xref ref-type="bibr" rid="c21">21</xref>], which in turn reflects the adjacency matrix of the graph (<xref ref-type="disp-formula" rid="eqn1">Eqn 1</xref>). Now the brain can use this adjacency information to find the shortest path to a target.</p>
<fig id="fig2" position="float" fig-type="figure">
<label>Figure 2:</label>
<caption><title>The phases of endotaxis during exploration, goal-tagging, and navigation.</title>
<p>A portion of the circuit in Figure 1 is shown, including a single goal cell that responds to the water resource. Bottom shows a graph of the environment, with nodes linked by edges, and the agent&#x2019;s current location shaded in orange. Each node has a point cell that reports the presence of the agent to a corresponding map cell. Map cells are recurrently connected (green) and feed convergent signals onto the goal cell. <bold>A:</bold> Initially the recurrent synapses are weak (empty circles). <bold>B:</bold> During exploration the agent moves between two adjacent nodes on the graph, and that strengthens the connection between their corresponding map cells (arrowhead, filled circles). <bold>C:</bold> After exploration the map synapses reflect the connectivity of the graph. Now the map cells have an extended profile of activity (darker = more active), centered on the agent&#x2019;s current location <italic>x</italic> and decreasing from there with distance on the graph. <bold>D:</bold> When the agent reaches the water source <italic>y</italic> the goal cell gets activated by the sensation of water, and this triggers plasticity at its input synapses (arrowhead). Thus the state of the map at the water location gets stored in the goal synapses. This event represents tagging of the water location. <bold>E:</bold> During navigation, as the agent visits different nodes, the map state gets filtered through the goal synapses to excite the goal cell. This produces a signal in the goal cell that declines with the agent&#x2019;s distance from the water location.</p></caption>
<graphic xlink:href="461751v2_fig2.tif"/>
</fig>
<p>After this map learning, the output of the map network is a hump of activity, centered on the current location <italic>x</italic> of the animal and declining with distance along the various paths in the graph of the environment (<xref rid="fig2" ref-type="fig">Fig 2C</xref>). If the animal moves to a different location <italic>y</italic>, the map output will change to another hump of activity, now centered on <italic>y</italic> (<xref rid="fig2" ref-type="fig">Fig 2D</xref>). The overlap of the two hump-shaped profiles will be large if nodes <italic>x</italic> and <italic>y</italic> are close on the graph, and small if they are distant. Fundamentally the endotaxis network computes that overlap. How is it done?</p>
<p>Suppose the animal visits <italic>y</italic> and finds water there. Then the water resource cell fires, triggering synaptic learning in the goal synapses. That stores the current profile of map activity <italic>v</italic><sub><italic>i</italic></sub>(<italic>y</italic>) in the synapses <italic>G</italic><sub><italic>ki</italic></sub> onto the goal cell <italic>k</italic> that responds to water (<xref rid="fig2" ref-type="fig">Fig 2D</xref>), <xref ref-type="disp-formula" rid="eqn8">Eqn 8</xref>). When the animal subsequently moves to a different location <italic>x</italic>, the goal cell <italic>k</italic> receives the current map output <bold>v</bold>(<italic>x</italic>) filtered through the previously stored synaptic template <bold>v</bold>(<italic>y</italic>) (<xref rid="fig2" ref-type="fig">Fig 2E</xref>). This is the desired measure of overlap (<xref ref-type="disp-formula" rid="eqn9">Eqn 9</xref>). Under suitable conditions this goal signal declines monotonically with the shortest graph-distance between <italic>x</italic> and <italic>y</italic>, as we will demonstrate both analytically and in simulations (<xref ref-type="sec" rid="s3">Sections 3</xref>, <xref ref-type="sec" rid="s4">4</xref>, <xref ref-type="sec" rid="s7">7</xref>).</p>
</sec>
</sec>
</sec>
<sec id="s3">
<label>3</label>
<title>Theory of endotaxis</title>
<p>Here we formalize the processes of <xref rid="fig2" ref-type="fig">Figure 2</xref> in a concrete mathematical model. The model is simple enough to allow some exact predictions for its behavior. The present section develops an analytical understanding of endotaxis that will help guide the numerical simulations in subsequent parts.</p>
<p>The environment is modeled as a directed graph consisting of <italic>n</italic> nodes, with adjacency matrix
<disp-formula id="eqn1">
<alternatives><graphic xlink:href="461751v2_eqn1.gif"/></alternatives>
</disp-formula>
</p>
<p>Movements of the agent are modeled as a sequence of steps along that graph. During exploration, the agent performs a walk that tries to cover the entire environment; in the simplest case a random walk. During navigation, the agent is instead guided at each intersection by maximizing a goal signal.</p>
<p>We implement the circuit of <xref rid="fig1" ref-type="fig">Fig 1B</xref> as a textbook linear rate model [<xref ref-type="bibr" rid="c14">14</xref>]. The point neurons are one-hot encoders of location: A point neuron fires if the agent is at that location; all the others are silent:
<disp-formula id="eqn2">
<alternatives><graphic xlink:href="461751v2_eqn2.gif"/></alternatives>
</disp-formula>
<disp-formula id="eqn3">
<alternatives><graphic xlink:href="461751v2_eqn3.gif"/></alternatives>
</disp-formula>
where <italic>&#x03B4;</italic><sub><italic>ix</italic></sub> is the Kronecker delta.</p>
<p>A map neuron sums synaptic input linearly from its point cell and the other map units; its output is simply proportional to that input:
<disp-formula id="eqn4">
<alternatives><graphic xlink:href="461751v2_eqn4.gif"/></alternatives>
</disp-formula>
</p>
<p>So the vector of all map outputs is
<disp-formula id="eqn5">
<alternatives><graphic xlink:href="461751v2_eqn5.gif"/></alternatives>
</disp-formula>
where <italic>&#x03B3;</italic> is the gain of the map units, and <bold>u</bold> is the one-hot input from point cells.</p>
<p>Now consider goal cell number <italic>k</italic> that is associated to a particular location <italic>y</italic>, because its resource is present at that node. The goal cell sums input from all the map units <italic>v</italic><sub><italic>i</italic></sub>, weighted by its goal synapses <italic>G</italic><sub><italic>ki</italic></sub>. So with the agent at node <italic>x</italic> the goal signal <italic>r</italic><sub><italic>k</italic></sub> is:
<disp-formula id="eqn6">
<alternatives><graphic xlink:href="461751v2_eqn6.gif"/></alternatives>
</disp-formula>
where we write <bold>g</bold><sub><italic>k</italic></sub> for the <italic>k</italic><sup>th</sup> row vector of the goal synapse matrix <bold>G</bold>. This is the set of synapses from all map cells onto the specific goal cell in question.</p>
<p>Suppose now that the agent has learned the structure of the environment perfectly, such that the map synapses are a copy of the graph&#x2019;s adjacency matrix (1),
<disp-formula id="eqn7">
<alternatives><graphic xlink:href="461751v2_eqn7.gif"/></alternatives>
</disp-formula>
</p>
<p>Similarly, suppose that the agent has acquired the goal synapses perfectly, namely proportional to the map output at the goal location <italic>y</italic>:
<disp-formula id="eqn8">
<alternatives><graphic xlink:href="461751v2_eqn8.gif"/></alternatives>
</disp-formula>
</p>
<p>Then as the agent moves to another location <italic>x</italic>, the goal cell reports a signal
<disp-formula id="eqn9">
<alternatives><graphic xlink:href="461751v2_eqn9.gif"/></alternatives>
</disp-formula>
where the matrix
<disp-formula id="eqn10">
<alternatives><graphic xlink:href="461751v2_eqn10.gif"/></alternatives>
</disp-formula>
</p>
<p>One can show (<xref ref-type="sec" rid="s10a">Section A.1</xref>) that for small <italic>&#x03B3;</italic> &#x226A; 1 this matrix <bold>E</bold> reflects the shortest distance between nodes on the graph, namely
<disp-formula id="eqn11">
<alternatives><graphic xlink:href="461751v2_eqn11.gif"/></alternatives>
</disp-formula>
where <italic>D</italic><sub><italic>xy</italic></sub> is the smallest number of steps needed to get from node <italic>y</italic> to node <italic>x</italic>.</p>
<p>Under the assumptions stated, the goal signal <italic>E</italic><sub><italic>xy</italic></sub> between nodes <italic>x</italic> and <italic>y</italic> declines monotonically with their distance. <xref rid="fig3" ref-type="fig">Figure 3</xref> illustrates this with numerical results on a binary tree graph. As expected, for small <italic>&#x03B3;</italic> the goal signal decays exponentially with graph distance (<xref rid="fig3" ref-type="fig">Fig 3A</xref>). Therefore an agent that makes turning decisions to maximize that goal signal will reach the goal by the shortest possible path.</p>
<fig id="fig3" position="float" fig-type="figure">
<label>Figure 3:</label>
<caption><title>Theory of the goal signal.</title>
<p>Dependence of the goal signal on graph distance, and the consequences for endotaxis navigation. <bold>A:</bold> The graph representing a binary tree labyrinth [<xref ref-type="bibr" rid="c43">43</xref>] serves for illustration. Suppose the endotaxis model has acquired the adjacency matrix perfectly: <bold>M</bold> = <bold>A</bold>. We compute the goal signal <italic>E</italic><sub><italic>xy</italic></sub> between any two nodes on the graph, and compare the results at different values of the map gain <italic>&#x03B3;</italic>. <bold>B:</bold> Dependence of the goal signal <italic>E</italic><sub><italic>xy</italic></sub> on the graph distance <italic>D</italic><sub><italic>xy</italic></sub> between the two nodes. Mean &#x00B1; SD, error bars often smaller than markers. Note logarithmic vertical axis. The signal decays exponentially over many log units. At high <italic>&#x03B3;</italic> the decay distance is greater. <bold>C:</bold> A detailed look at the goal signal, each point is for a pair of nodes (<italic>x, y</italic>). For low <italic>&#x03B3;</italic> the decay with distance is strictly monotonic. At high <italic>&#x03B3;</italic> there is overlap between the values at different distances. As <italic>&#x03B3;</italic> exceeds the critical value <italic>&#x03B3;</italic><sub>c</sub> = 0.38 the distance-dependence breaks down. <bold>D:</bold> Using the goal signal for navigation. For every pair of start and end nodes we navigate the route by following the goal signal and compare the distance traveled to the shortest graph distance. For all routes with the same graph distance we plot the median navigated distance with 10&#x0025; and 90&#x0025; quantiles. Variable gain at a constant noise value of <italic>&#x03F5;</italic> = 0.01. At gains <italic>&#x03B3; &#x003E;</italic> 0.35 navigation failed for some point pairs. <bold>E:</bold> As in panel (D) but varying the noise at a constant gain of <italic>&#x03B3;</italic> = 0.34.</p></caption>
<graphic xlink:href="461751v2_fig3.tif"/>
</fig>
<p>The exponential decay of the goal signal represents a challenge for practical implementation with biological circuits. Neurons have a finite signal-to-noise ratio, so detecting minute differences in the firing rate of a goal neuron will be unreliable. Because the goal signal changes by a factor of <italic>&#x03B3;</italic> across every link in the graph, one wants to set the map neuron gain <italic>&#x03B3;</italic> as large as possible. Unfortunately there is a strict upper limit for that gain:
<disp-formula id="eqn12">
<alternatives><graphic xlink:href="461751v2_eqn12.gif"/></alternatives>
</disp-formula>
</p>
<p>For larger <italic>&#x03B3;</italic> &#x003E; <italic>&#x03B3;</italic><sub>c</sub> the goal signal <italic>E</italic><sub><italic>xy</italic></sub> no longer represents graph distances (<xref ref-type="sec" rid="s10b">Section A.2</xref>). The largest eigenvalue of the adjacency matrix in turn is related to the number of edges per node. For graphs with 2 to 4 edges per node, <italic>&#x03B3;</italic><sub>c</sub> is typically about 0.3. The graph in <xref rid="fig3" ref-type="fig">Figure 3</xref> has <italic>&#x03B3;</italic><sub>c</sub> &#x2248; 0.383, and indeed <italic>E</italic><sub><italic>xy</italic></sub> becomes erratic as <italic>&#x03B3;</italic> approaches that value (<xref rid="fig3" ref-type="fig">Fig 3C</xref>).</p>
<p>To implement the finite dynamic range explicitly, we add some noise to the goal signal of <xref ref-type="disp-formula" rid="eqn9">Eqn 9</xref>:
<disp-formula id="eqn13">
<alternatives><graphic xlink:href="461751v2_eqn13.gif"/></alternatives>
</disp-formula>
where the noise <italic>&#x03B7;</italic> is uniformly distributed with range <italic>&#x03F5;</italic>:
<disp-formula id="ueqn1">
<alternatives><graphic xlink:href="461751v2_ueqn1.gif"/></alternatives>
</disp-formula>
</p>
<p>The scale <italic>&#x03F5;</italic> of this noise is expressed relative to the maximum value of the goal signal. What is a reasonable value for this noise? For reference, humans and animals can routinely discriminate sensory stimuli that differ by only 1&#x0025;, for example the pitch of tones or the intensity of a light, especially if they occur in close succession. Clearly the neurons all the way from receptors to perception must represent those small differences. Thus we will use <italic>&#x03F5;</italic> = 0.01 as a reference noise value in many of the results presented here. <sup><xref ref-type="fn" rid="FN3">3</xref></sup></p>
<p>The process of navigation towards a chosen goal signal is formalized in <xref ref-type="statement" rid="alg1">Algorithm 1</xref>. At each node the agent inspects the goal signal that would be obtained at all the neighboring nodes, corrupted by the readout noise <italic>&#x03B7;</italic>. Then it steps to the neighbor with the highest value. Suppose the agent starts at node <italic>x</italic> and navigates following the goal signal for node <italic>y</italic>. The resulting navigation route <italic>x</italic> = <italic>s</italic><sub>0</sub>, <italic>s</italic><sub>1</sub>, &#x2026;, <italic>s</italic><sub><italic>n</italic></sub> = <italic>y</italic> has <italic>L</italic><sub><italic>xy</italic></sub> = <italic>n</italic> steps. Navigation is perfect if this equals the shortest graph distance, <italic>L</italic><sub><italic>xy</italic></sub> = <italic>D</italic><sub><italic>xy</italic></sub>. We will assess deviations from perfect performance by the excess length of the routes.</p>
<fig position="float" fig-type="figure" id="alg1"><label>Algorithm 1</label><caption><title>Navigation</title></caption><graphic xlink:href="461751v2_alg1.tif"/></fig>
<p><xref rid="fig3" ref-type="fig">Figure 3D-E</xref> illustrates how the navigated path distance <italic>L</italic><sub><italic>xy</italic></sub> depends on the noise level <italic>&#x03F5;</italic> and the gain <italic>&#x03B3;</italic>. For small gain or high noise the goal signal extends only over a graph distance of 5-6 links. Beyond that the navigated distance <italic>L</italic><sub><italic>xy</italic></sub> begins to exceed the graph distance <italic>D</italic><sub><italic>xy</italic></sub>. As the gain increases, the goal signal extends further through the graph and navigation becomes reliable over longer distances (<xref rid="fig3" ref-type="fig">Fig 3D</xref>). Eventually, however, the goal signal loses its monotonic distance dependence (<xref rid="fig3" ref-type="fig">Fig 3C</xref>). At that stage, navigation across the graph may fail because the agent gets trapped in a local maximum of the goal signal. This can happen even before the critical gain value is reached (<xref rid="fig3" ref-type="fig">Fig 3C</xref>). For the example in <xref rid="fig3" ref-type="fig">Fig 3</xref> the highest useful gain is <italic>&#x03B3;</italic> = 0.34 whereas <italic>&#x03B3;</italic><sub>c</sub> = 0.383.</p>
<p>For any given value of the gain, navigation improves with lower noise levels, as expected (<xref rid="fig3" ref-type="fig">Fig 3E</xref>). At the reference value of <italic>&#x03F5;</italic> = 0.01, navigation is perfect even across the 12 links that separate the most distant points on this graph.</p>
<p>In summary, this analysis spells out the challenges that need to be met for endotaxis to work properly. First, during the learning phase, the agent must reliably extract the adjacency matrix of the graph, and copy it into its map synapses. Second, during the navigation phase, the agent must evaluate the goal signal with enough resolution to distinguish the values at alternative nodes. The neuronal gain <italic>&#x03B3;</italic> plays a central role: With <italic>&#x03B3;</italic> too small, the goal signal decays rapidly with distance and vanishes into the noise just a few steps away from the goal. But at large <italic>&#x03B3;</italic> the network computation becomes unstable.</p>
</sec>
<sec id="s4">
<label>4</label>
<title>Acquisition of map and targets during exploration</title>
<p>As discussed above, the goal of learning during exploration is that the agent acquires a copy of the graph&#x2019;s adjacency matrix in its map synapses, <bold>M</bold> &#x2248; <bold>A</bold>, and stores the map output at a goal location <italic>y</italic> in the goal synapses <bold>g</bold> &#x2248; <bold>v</bold>(<italic>y</italic>). Here we explore how the rules for synaptic plasticity in the map and goal networks allow that to happen. <xref ref-type="statement" rid="alg2">Algorithm 2</xref> spells out the procedure we implemented for learning from a random walk through the environment.</p>
<p>The map synapses <italic>M</italic><sub><italic>ij</italic></sub> start out at zero strength. When the agent moves from node <italic>j</italic> = <italic>s</italic>(<italic>t</italic>) at time <italic>t</italic> to node <italic>i</italic> = <italic>s</italic>(<italic>t</italic> &#x002B; 1), the map cell <italic>j</italic> is excited before the step, and map cell <italic>i</italic> after the step. When that happens, the agent potentiates the synapse between those two neurons to <italic>M</italic><sub><italic>ij</italic></sub> = 1. Of course, a map cell can also get activated through the recurrent network, and we must distinguish that from direct input from its point cell. We found that a simple threshold criterion is sufficient. Here <italic>&#x03B8;</italic> is a threshold applied to both the pre- and post-synaptic activity, and the map synapse gets established only if both neurons respond above threshold. The tuning requirements for this threshold are discussed below.</p>
<p>The map learning rule produces a full strength synapse after a single step: This allows the agent to learn a route after the first traversal, which is needed to explain the rapid learning observed in experimental animals. Note also that the potentiation depends on temporal sequence: the pre-synaptic neuron must be active before the post-synaptic neuron. This allows the agent to learn a directed graph, in which links can be traversed in only one direction. For learning on undirected graphs it can be useful to relax the time-dependent rule (see <xref ref-type="sec" rid="s7">Section 7</xref>).</p>
<fig position="float" fig-type="figure" id="alg2"><label>Algorithm 2</label><caption><title>Map and goal learning</title></caption><graphic xlink:href="461751v2_alg2.tif"/></fig>
<p>The goal synapses <italic>G</italic><sub><italic>kj</italic></sub> similarly start out at zero strength. Consider a particular goal cell <italic>k</italic>, and suppose its corresponding resource cell has activity <italic>F</italic><sub><italic>ky</italic></sub> when the agent is at location <italic>y</italic>. When a positive resource signal arrives, that means the agent is at a goal location. If the goal signal <italic>r</italic><sub><italic>k</italic></sub> received from the map output is smaller than the resource signal <italic>F</italic><sub><italic>ky</italic></sub>, then the goal synapses get incremented by something proportional to the current map output. Learning at the goal synapses saturates when the goal signal correctly predicts the resource signal. The learning rate <italic>&#x03B1;</italic> sets how fast that will happen. Note that both the learning rules for map and goal synapses are Hebbian and strictly local: Each synapse is modified based only on signals available in the pre- and post-synaptic neurons.</p>
<p>To illustrate the process of map and goal learning we simulate an agent exploring a simple ring graph by a random walk (<xref rid="fig4" ref-type="fig">Fig 4</xref>). At first, there are no targets in the environment that can deliver a resource (<xref rid="fig4" ref-type="fig">Fig 4A</xref>). Then we add one target location, and later a second one. Finally we add a new link to the graph that makes a connection clear across the environment. As the agent explores the graph, we will track how its representations evolve by monitoring the map synapses and the profile of the goal signal.</p>
<fig id="fig4" position="float" fig-type="figure">
<label>Figure 4:</label>
<caption><title>Learning the map and the targets during exploration.</title>
<p><bold>(A)</bold> Simulation of a random walk on a ring with 14 nodes. Left: Layout of the ring, with resource locations marked in blue. The walk progresses in 800 time steps (top to bottom); with the agent&#x2019;s position marked in red (nodes 0-13, horizontal axis). At each time the color map shows the goal signal that would be produced if the agent were at position &#x2018;Node&#x2019;. White horizontal lines mark the appearance of a target at <italic>t</italic> = 200, a second target with the same resource at <italic>t</italic> = 400, and a new link across the ring at step <italic>t</italic> = 600. <bold>(B)</bold> The matrix <bold>M</bold> of map synapses at various times. The pixel in row <italic>i</italic> and column <italic>j</italic> represents the matrix element <italic>M</italic><sub><italic>ij</italic></sub>. Color purple = 0. Note the first few steps (number above graph) each add a new synapse. Eventually, <bold>M</bold> reflects the adjacency matrix of nodes on the graph. <bold>(C)</bold> Goal signals just before and just after the agent encounters the first target. <bold>(D)</bold> Goal signals just before and just after the agent encounters the second target. <bold>(E)</bold> Goal signals just before and just after the agent travels the new link for the first time.</p></caption>
<graphic xlink:href="461751v2_fig4.tif"/>
</fig>
<p>At the outset, every time the agent steps to a new node, the map synapse corresponding to that link gets potentiated (<xref rid="fig4" ref-type="fig">Fig 4B</xref>). After enough steps, the agent has executed every link on the graph, and the matrix of map synapses resembles the full adjacency matrix of the graph (<xref rid="fig4" ref-type="fig">Fig 4B</xref>). At this stage the agent has learned the connectivity of the environment.</p>
<p>Once a target appears in the environment it takes the agent a few random steps to encounter it. At that moment the goal synapses get potentiated for the first time, and suddenly a goal signal appears in the goal cell (<xref rid="fig4" ref-type="fig">Fig 4C</xref>). The profile of that goal signal is fully formed and spreads through the entire graph thanks to the pre-established map network. By following this goal signal uphill the agent can navigate along the shortest path to the target from any node on the graph. Note that the absolute scale of the goal signal grows a little every time the agent visits the goal (<xref rid="fig4" ref-type="fig">Fig 4A</xref>) and eventually saturates.</p>
<p>Some time later we introduce a second target elsewhere in the environment (<xref rid="fig4" ref-type="fig">Fig 4D</xref>). When the agent encounters it along its random walk, the goal synapses get updated, and the new goal signal has two peaks in its profile. Again, this goal signal grows during subsequent visits. By following that signal uphill from any starting point, the agent will be led to a nearby target by the shortest possible path.</p>
<p>When a new link appears, the agent eventually discovers it on its random walk. At that point the goal signal changes instantaneously to incorporate the new route (<xref rid="fig4" ref-type="fig">Fig 4E</xref>). An agent following the new goal signal from node 13 on the ring will now be led to a target location in just 3 steps, using the shortcut, whereas previously it took 5 steps.</p>
<p>This simulation illustrates how the structure of the environment is acquired separately from the location of resources. The agent can explore and learn the map of the environment even without any resources present (<xref rid="fig4" ref-type="fig">Fig 4B</xref>). This learning takes place among the map synapses in the endotaxis circuit (<xref rid="fig1" ref-type="fig">Fig 1B</xref>). When a resource is found, its location gets tagged within that established map through learning by the goal synapses. The resulting goal signal is available immediately without the need for further learning (<xref rid="fig4" ref-type="fig">Fig 4C</xref>). If the distribution of resources changes, the knowledge in the map remains unaffected (<xref rid="fig4" ref-type="fig">Fig 4D</xref>) but the goal synapses can change quickly to incorporate the new target. Vice versa, if the graph of the environment changes, the map synapses get updated, and that adapts the goal signal to the new situation even without further change in the goal synapses (<xref rid="fig1" ref-type="fig">Fig 1E</xref>).</p>
<p>What happens if a previously existing link disappears from the environment, for example because one corridor of the mouse burrow caves in? Ideally the agent would erase that link from the cognitive map. The learning algorithm <xref ref-type="statement" rid="alg2">Alg 2</xref> is designed for rapid and robust acquisition of a cognitive map starting from zero knowledge, and does not contain a provision for forgetting. However, one can add a biologically plausible rule for synaptic depression that gradually erases memory of a link if the agent never travels it. Details are presented in Supplement <xref ref-type="sec" rid="s10e">section A.5</xref> (<xref rid="fig9" ref-type="fig">Fig 9</xref>). For sake of simplicity we continue the present analysis of endotaxis based on the simple 3-parameter algorithm presented above (<xref ref-type="statement" rid="alg2">Alg 2</xref>).</p>
</sec>
<sec id="s5">
<label>5</label>
<title>Navigation using the learned goal signal</title>
<p>We now turn to the &#x201C;exploitation&#x201D; component of endotaxis, namely use of the learned information to navigate towards targets. In the simulations of <xref rid="fig5" ref-type="fig">Figure 5</xref> we allow the agent to explore a graph. Every node on the graph drives a separate resource cell, thus the agent simultaneously learns goal signals to every node. After a random walk sufficient to cover the graph several times, we test the agent&#x2019;s ability to navigate to the goals by ascending on the learned goal signal. For that purpose we teleport the agent to an arbitrary start node in the graph and ask how many steps it takes to reach the goal node.</p>
<fig id="fig5" position="float" fig-type="figure">
<label>Figure 5:</label>
<caption><title>Navigation using the learned map and targets.</title>
<p><bold>(A-C)</bold> Ring with 50 nodes. <bold>(A)</bold> Goal signal for a single target location (blue dot on left icon), after learning during random exploration with 10,000 steps. Color scale is logarithmic, yellow=high. Note monotonic decay of the goal signal with graph distance from the target. <bold>(B)</bold> Results of all-to-all navigation where every node is a separate goal. For all pairs of nodes this shows the navigated distance vs the graph distance. Median &#x00B1; 10/90 percentiles for all routes with the same graph distance. &#x201C;Ideal&#x201D; navigation would follow the identity. The actual navigation is ideal over short distances, then begins to deviate from ideal at a critical distance that depends on the noise level <italic>&#x03F5;</italic>. <bold>(C)</bold> As in (B) over a wider range, note logarithmic axis. Noise <italic>&#x03F5;</italic> = 0.01. Includes comparison to navigation by a random walk; and navigation using the optimal goal signal based on knowledge of the graph structure and target location. <italic>&#x03B3;</italic> = 0.41, <italic>&#x03B8;</italic> = 0.39, <italic>&#x03B1;</italic> = 0.3. <bold>(D-F)</bold> As in (A-C) for a binary tree graph with 127 nodes. <bold>(D)</bold> Goal signal to the node marked on the left icon. This was the reward port in the labyrinth experiments of [<xref ref-type="bibr" rid="c43">43</xref>]. White lines separate the branches of the tree. <italic>&#x03B3;</italic> = 0.32, <italic>&#x03B8;</italic> = 0.27, <italic>&#x03B1;</italic> = 0.3. <bold>(G-I)</bold> As in (A-C) for a &#x201C;Tower of Hanoi&#x201D; graph with 81 nodes. <italic>&#x03B3;</italic> = 0.29, <italic>&#x03B8;</italic> = 0.27, <italic>&#x03B1;</italic> = 0.3.</p></caption>
<graphic xlink:href="461751v2_fig5.tif"/>
</fig>
<p><xref rid="fig5" ref-type="fig">Figure 5A-C</xref> shows results on a ring graph with 50 nodes. With suitable values of the model parameters (<italic>&#x03B3;, &#x03B8;, &#x03B1;</italic>) &#x2013; more on that later &#x2013; the agent learns a goal signal that declines monotonically with distance from the target node (<xref rid="fig5" ref-type="fig">Fig 5A</xref>). The ability to ascend on that goal signal depends on the noise level <italic>&#x03F5;</italic>, which determines whether the agent can sense the difference in goal signal at neighboring nodes. At a high noise level <italic>&#x03F5;</italic> = 0.1 the agent finds the target by the shortest route from up to 5 links away (<xref rid="fig5" ref-type="fig">Fig 5B</xref>); beyond that range some navigation errors creep in. At a low noise level of <italic>&#x03F5;</italic> = 0.005 navigation is perfect up to 10 links away. Every factor of two increase in noise seems to reduce the range of navigation by about one link.</p>
<p>How does the process of learning the map of the environment affect the ultimate navigation performance? <xref rid="fig5" ref-type="fig">Figure 5C</xref> makes that comparison by considering an agent with oracular knowledge of the graph structure and target location (<xref ref-type="disp-formula" rid="eqn7">Eqns 7</xref> and <xref ref-type="disp-formula" rid="eqn8">8</xref>). Interestingly this adds only 1 link to the distance range for perfect navigation. Here we also compare to an agent with zero knowledge of the environment that performs a random walk. On this graph that takes about 40 times longer than by using endotaxis.</p>
<p>The ring graph is particularly simple, but how well does endotaxis learn in a more realistic environment? <xref rid="fig5" ref-type="fig">Figure 5D-F</xref> shows results on a binary tree graph with 6 levels: This is the structure of a maze used in a recent study on mouse navigation [<xref ref-type="bibr" rid="c43">43</xref>]. In those experiments, mice learned quickly how to reach the reward location (blue dot in <xref rid="fig5" ref-type="fig">Fig 5D</xref>) from anywhere within the maze. Indeed, the endotaxis agent can learn a goal signal that declines monotonically with distance from the reward port (<xref rid="fig5" ref-type="fig">Fig 5D</xref>). At a noise level of <italic>&#x03F5;</italic> = 0.01 navigation is perfect over distances of 9 links, and close to perfect over the maximal distance of 12 links that occurs in this maze (<xref rid="fig5" ref-type="fig">Fig 5E</xref>). Again, the challenge of having to learn the map affects the performance only slightly (<xref rid="fig5" ref-type="fig">Fig 5F</xref>). Finally, comparison with the random agent shows that endotaxis shortens the time to target by a factor of 100 on this graph (<xref rid="fig5" ref-type="fig">Fig 5F</xref>).</p>
<p><xref rid="fig5" ref-type="fig">Figure 5G-I</xref> shows results for a more complex graph that represents a cognitive task, namely the game &#x201C;Tower of Hanoi&#x201D;. Disks of different sizes are stacked on four pegs, with the constraint that no disk can rest on top a smaller one. The game is solved by rearranging the pile of disks from the center peg to another. In any state of the game there are either 2 or 3 possible actions, and they form an interesting graph with many loops (<xref rid="fig5" ref-type="fig">Fig 5G</xref>). The player starts at the top node (all disks on the center peg) and the two possible solutions correspond to the bottom left and right corners. Again, random exploration leads the endotaxis agent to learn the connectivity of the game and to discover the solutions. The resulting goal signal decays systematically with graph distance from the solution (<xref rid="fig5" ref-type="fig">Fig 5G</xref>). At a noise of <italic>&#x03F5;</italic> = 0.01 navigation is perfect once the agent gets to within 9 moves of the target (<xref rid="fig5" ref-type="fig">Fig 5H</xref>). This is not quite sufficient for an error-free solution from the starting position, which requires 15 moves. However, compared to an agent executing random moves, endotaxis speeds up the solution by a factor of 10 (<xref rid="fig5" ref-type="fig">Fig 5I</xref>). If the game is played with only 3 disks, the maximal graph distance is 7, and endotaxis solves it perfectly at <italic>&#x03F5;</italic> = 0.01.</p>
<p>These results show that endotaxis functions well in environments with very different structure: linear, tree-shaped, and cyclic. Random exploration in conjunction with synaptic learning can efficiently acquire the connectivity of the environment and the location of targets. With a noise level of 1&#x0025;, the resulting goal signal allows perfect navigation over distances of &#x223C;9 steps, independent of the nature of the graph. This is a respectable range: Personal experience suggests that we rarely learn routes that involve more than 9 successive decisions. Chess openings, which are often played in a fast and reflexive fashion, last about 10 moves. Nonetheless, we explored ways to extend this range.</p>
<p>One potential approach is to counteract the decay of the goal signal across links in the map network. If the goal signal were to decay more gently then it could reach farther before getting corrupted by noise. To this end, we experimented with a nonlinear input-output function for the map cells, for example introducing a tanh() nonlinearity in <xref ref-type="disp-formula" rid="eqn4">Eqn 4</xref>. This boosts small output values and saturates at large values [<xref ref-type="bibr" rid="c16">16</xref>], but did not improve the overall performance of endotaxis. Instead, learning of the map was perturbed, because the learning algorithm (<xref ref-type="statement" rid="alg2">Alg 2</xref>) requires a substantial difference between direct activation of a map cell from a point cell and indirect activation of the neighboring map cell.</p>
<p>A more promising approach is to cover the environment by multiple maps with a hierarchy of length scales. In the example of <xref rid="fig5" ref-type="fig">Fig 5G</xref>, endotaxis can lead the agent to the solution once it enters the correct third of the graph. So one could envision a second map network with much coarser point cells and fewer links that guides the agent roughly into the right region, from where the fine map can take over. This comes with its own challenges &#x2013; for example the time scale of synaptic plasticity must be extended to allow for longer travel times &#x2013; but the concept is worth exploring further.</p>
</sec>
<sec id="s6">
<label>6</label>
<title>Parameter sensitivity</title>
<p>The endotaxis model has only 3 parameters: the gain <italic>&#x03B3;</italic> of map units, the threshold <italic>&#x03B8;</italic> for learning at map synapses, and the learning rate <italic>&#x03B1;</italic> at goal synapses. How does performance depend on these parameters? Do they need to be tuned precisely? And does the optimal tuning depend on the spatial environment? There is a natural hierarchy to the parameters if one separates the process of learning from that of navigation. Suppose the circuit has learned the structure of the environment perfectly, such that the map synapses reflect the adjacencies (<xref ref-type="disp-formula" rid="eqn7">Eqn 7</xref>), and the goal synapses reflect the map output at the goal (<xref ref-type="disp-formula" rid="eqn8">Eqn 8</xref>). Then the optimal navigation performance of the endotaxis system depends only on the gain <italic>&#x03B3;</italic> and the noise level <italic>&#x03F5;</italic>. For a given <italic>&#x03B3;</italic>, in turn, the precision of map learning depends only on the threshold <italic>&#x03B8;</italic>. Finally, if the gain is set optimally and the map was learned properly, the identification of targets depends only on the goal learning rate <italic>&#x03B1;</italic>. <xref rid="fig6" ref-type="fig">Figure 6</xref> explores these relationships in turn.</p>
<fig id="fig6" position="float" fig-type="figure">
<label>Figure 6:</label>
<caption><title>Sensitivity of performance to the model parameters.</title>
<p>On each of the three graphs we simulated endotaxis for all-to-all navigation, where each node serves as a start and a goal node. The performance measure was the range of the goal signal, defined as the graph distance over which at least half the navigated routes follow the shortest path. The exploration path for synaptic learning was of medium length, visiting each edge on the graph approximately 10 times. The noise was set to <italic>&#x03F5;</italic> = 0.01. <bold>(A)</bold> Binary tree maze with 127 nodes. <bold>Left:</bold> Dependence of the goal signal range on the gain <italic>&#x03B3;</italic> and the threshold <italic>&#x03B8;</italic> for learning map synapses. Performance increases with higher gain until it collapses beyond the critical value. For each gain there is a sharply defined range of useful thresholds, with lower values at lower gain. <bold>Right:</bold> Dependence of the goal signal range on the learning rate <italic>&#x03B1;</italic> at goal synapses, and the length of the exploratory walk, measured in visits per edge of the graph. For a short walk (1 edge visit) a high learning rate is best. For a long walk (100 edge visits) a lower learning rate wins out. <bold>(B)</bold> As in (A) for the Tower of Hanoi graph with 81 nodes. <bold>(C)</bold> As in (A) for a Ring graph with 50 nodes.</p></caption>
<graphic xlink:href="461751v2_fig6.tif"/>
</fig>
<p>We simulated the learning phase of endotaxis as in the preceding section (<xref rid="fig5" ref-type="fig">Fig 5B, E, H</xref>), using a noise level of <italic>&#x03F5;</italic> = 0.01, and systematically varying the model parameters (<italic>&#x03B3;, &#x03B8;, &#x03B1;</italic>). For each parameter set we measured the graph distance over which at least half of the navigated routes were perfect. We defined this distance as the range of the goal signal.</p>
<p>For example, on the binary tree graph with 127 nodes (<xref rid="fig6" ref-type="fig">Fig 6A</xref>) the signal range improves with gain, until performance collapses beyond a maximal gain value. This is just as predicted by the theory (<xref rid="fig3" ref-type="fig">Fig 3</xref>), except that the maximal gain <italic>&#x03B3;</italic><sub>max</sub> = 0.34 is slightly below the critical value <italic>&#x03B3;</italic><sub>c</sub> = 0.383. Clearly the added complications of having to learn the map and goal locations take their toll at high gain. Below the maximal cutoff, the dependence of performance on gain is rather gentle: For example a 10&#x0025; change in gain from 0.30 to 0.33 leads to a 23&#x0025; change in performance. At any given gain value, there is a range of values for the threshold <italic>&#x03B8;</italic> that deliver the identical performance. With <italic>&#x03B8;</italic> in this range, the map is essentially learned perfectly. Note that this range is generous and does not require precise adjustment: For example, under a near-maximal gain of 0.32, the threshold can vary freely over a 20&#x0025; range.</p>
<p>Once the gain and synaptic threshold are set so as to acquire the map synapses, the quality of goal learning depends only on the learning rate <italic>&#x03B1;</italic>. With large <italic>&#x03B1;</italic>, a single visit to the goal fully potentiates the goal synapses so they don&#x2019;t get updated further. This allows for a fast acquisition of that target, but at the risk of imperfect learning, because the map may not be fully explored yet. A small <italic>&#x03B1;</italic> will update the synapses only partially over many successive visits to the goal. This leads to a poor performance after short exploration, because the weak goal signal competes with noise, but superior performance after long explorations: a trade-off between speed of learning and accuracy. Precisely this speed-accuracy tradeoff is seen in the simulations (<xref rid="fig6" ref-type="fig">Fig 6A</xref>, right): A high learning rate is optimal for short explorations, but for longer ones a small learning rate wins out. An intermediate value of <italic>&#x03B1;</italic> = 1 delivers a good compromise performance.</p>
<p>We found qualitatively similar behavior for the other two environments studied here: The Tower of Hanoi graph (<xref rid="fig6" ref-type="fig">Fig 6B</xref>) and a ring graph (<xref rid="fig6" ref-type="fig">Fig 6C</xref>). In each case, the maximal usable gain is slightly below the critical value <italic>&#x03B3;</italic><sub>c</sub> of that graph. A learning rate of <italic>&#x03B1;</italic> = 1 delivers intermediate results. For long explorations a lower learning rate is best.</p>
<p>In summary this sensitivity analysis shows that the optimal parameter set for endotaxis does depend on the environment. This is not altogether surprising: Every neural network needs to adapt to the distribution of inputs it receives so as to perform optimally. At the same time, the required tuning is rather generous, allowing at least 10-20&#x0025; slop in the parameters for reasonable performance. Furthermore, a single parameter set of <italic>&#x03B3;</italic> = 0.29, <italic>&#x03B8;</italic> = 0.26, <italic>&#x03B1;</italic> = 1 performs quite well on both the binary maze and the Tower of Hanoi graphs, which are dramatically different in character.</p>
</sec>
<sec id="s7">
<label>7</label>
<title>Navigating a partial map: homing behavior</title>
<p>We have seen that endotaxis can learn both connections in the environment and the locations of targets after just one visit (<xref rid="fig6" ref-type="fig">Fig 6</xref>.) This suggests that the agent can navigate well on whatever portion of the environment it has already seen, before covering it exhaustively. To illustrate this we analyze an ethologically relevant instance.</p>
<p>Consider a mouse that enters an unfamiliar environment for the first time, such as a labyrinth constructed by fiendish graduate students [<xref ref-type="bibr" rid="c43">43</xref>]. Given the uncertainties about what lurks inside, the mouse needs to retain the ability to flee back to the entrance as fast as possible. For concreteness take the mouse trajectory in <xref rid="fig7" ref-type="fig">Figure 7A</xref>. The animal has entered the labyrinth (location 1), made its way to one of the end nodes (3), then explored further to another end node (4). Suppose it needs to return to the entrance now. One way would be to retrace all its steps. But the shorter way is to take a left at and cut out the unnecessary branch to (3). Experimentally we found that mice indeed take the short direct route instead of retracing their path [<xref ref-type="bibr" rid="c43">43</xref>]. They can do so even on the very first visit of an unfamiliar labyrinth. Can endotaxis explain this behavior?</p>
<fig id="fig7" position="float" fig-type="figure">
<label>Figure 7:</label>
<caption><title>Homing by endotaxis.</title>
<p><bold>(A)</bold> A binary tree maze as used in [<xref ref-type="bibr" rid="c43">43</xref>]. A simulated mouse begins to explore the labyrinth (colored trajectory, purple=early, yellow=late), traveling from the entrance to one of the end nodes (3), then to another end node (4). Can it return to the entrance from there using endotaxis? <bold>(B)</bold> Goal signal learned by the end of the walk in (A), displayed as in Fig 5D, purple=0. Note the goal signal is non-zero only at the nodes that have been encountered so far. From all those nodes it increases monotonically toward the entrance. <bold>(C)</bold> Detailed plot of the goal signal along the shortest route for homing. Parameters <italic>&#x03B3;</italic> = 0.32, <italic>&#x03B8;</italic> = 0.27, <italic>&#x03B1;</italic> = 10, <italic>&#x03F5;</italic> = 0.01.</p></caption>
<graphic xlink:href="461751v2_fig7.tif"/>
</fig>
<p>We assume that the entrance is a salient location, so the agent dedicates a goal cell to the root node of the binary tree. <xref rid="fig7" ref-type="fig">Figure 7B</xref> plots the goal signal after the path in panel A, just as the agent wants to return home. The goal signal is non-zero only at the locations the agent has visited along its path. It clearly increases monotonically towards the entrance (<xref rid="fig7" ref-type="fig">Fig 7C</xref>). At a noise level of <italic>&#x03F5;</italic> = 0.01 the agent can navigate to the entrance by the shortest path without error. Note specifically that the agent does not retrace its steps when arriving at location (2), but instead turns toward (1).</p>
<p>One unusual aspect of homing is that the goal is identified first, before the agent has even entered the environment to explore it. That strengthens the goal synapse from the sole map cell that is active at the entrance. Only subsequently does the agent build up map synapses that allow the goal signal to spread throughout the map network. Another key assumption behind homing is that any link on the graph can be traversed in both directions. For route-finding in a spatial environment, that is often assured. <sup><xref ref-type="fn" rid="FN4">4</xref></sup> To enable a return home along a path that has only been traveled in the forward direction, we loosened the learning rule for map synapses (<xref ref-type="statement" rid="alg2">Alg 2</xref>) to be independent of the activation sequence, so that synapses in both directions get enhanced when two map neurons are active in near coincidence. In general, this variant of the learning rule helps speed up the learning of undirected graphs.</p>
</sec>
<sec id="s8">
<label>8</label>
<title>Efficient patrolling</title>
<p>Beside exploring and exploiting, a third mode of navigating the environment is patrolling. At this stage the animal knows the lay of the land, and has perhaps discovered some special locations, but continues to patrol the environment for new opportunities or threats. In our study of mice freely interacting with a large labyrinth, the animals spent more than 85&#x0025; of the time patrolling the maze [<xref ref-type="bibr" rid="c43">43</xref>]. This continued for hours after they had perfected the targeting of reward locations and the homing back to the entrance. Presumably the goal of patrolling is to cover the entire environment quickly so as to spot any changes as soon as they develop. So the ideal path in patrolling would visit every node on the graph in the smallest number of steps possible. In the binary-tree maze used for our experiments, that optimal patrol path takes 252 steps: It visits every end node of the labyrinth exactly once without any repeats (<xref rid="fig8" ref-type="fig">Fig 8A</xref>).</p>
<fig id="fig8" position="float" fig-type="figure">
<label>Figure 8:</label>
<caption><title>Patrolling by endotaxis.</title>
<p><bold>(A) Left:</bold> A binary tree maze as used in [<xref ref-type="bibr" rid="c43">43</xref>], plotted here so every node has a different vertical offset. <bold>Right:</bold> A perfect patrol path through this environment. It visits every node in 252 steps, then starts over. <bold>(B)</bold> Patrolling efficiency of different agents on the binary tree maze. The focus here is on the 64 end nodes of the labyrinth. We ask how many distinct end nodes are found (vertical axis) as a function of the number of end nodes visited (horizontal axis). For the perfect patrolling path, that relationship is the identity (&#x2018;perfect&#x2019;). For a random walk, the curve is shifted far to the right (&#x2018;random&#x2019;, note log axis). Ten mice in [<xref ref-type="bibr" rid="c43">43</xref>] showed patrolling behavior within the shaded range. Solid lines are the endotaxis agent, operating at different noise levels <italic>&#x03F5;</italic>. Note <italic>&#x03F5;</italic> = 0.01 produces perfect patrolling; in fact, panel A is a path produced by this agent. Higher noise levels lead to lower efficiency. The behavior of mice corresponds to <italic>&#x03F5;</italic> &#x2248; 1. Gain <italic>&#x03B3;</italic> = 0.32, habituation <italic>&#x03B2;</italic> = 1.2, with recovery time <italic>&#x03C4;</italic> = 100 steps.</p></caption>
<graphic xlink:href="461751v2_fig8.tif"/>
</fig>
<p>Real mice don&#x2019;t quite execute this optimal path, but their patrolling behavior is much more efficient than random (<xref rid="fig8" ref-type="fig">Fig 8B</xref>). They avoid revisiting areas they have seen recently. Could endotaxis implement such an efficient patrol of the environment? The task is to steer the agent to locations that haven&#x2019;t been visited recently. One can formalize this by imagining a resource called &#x201C;neglect&#x201D; distributed throughout the environment. At each location neglect increases with time, then resets to zero the moment the agent visits there. To use this in endotaxis one needs a goal cell that represents neglect.</p>
<p>We add to the core model a goal cell that receives excitation from every map cell, via synapses that are equal and constant in strength (see clock symbol in <xref rid="fig1" ref-type="fig">Fig 1B</xref>). This produces a goal signal that is approximately constant everywhere in the environment. Now suppose that the point neurons undergo a form of habituation: When a point cell fires because the agent walks through its field, its sensitivity decreases by some habituation factor. That habituation then decays over time until the point cell recovers its original sensitivity. As a result, the most recently visited points on the graph produce a smaller goal signal. Endotaxis based on this goal signal will therefore lead the agent to the areas most in need of a visit.</p>
<p><xref rid="fig8" ref-type="fig">Figure 8B</xref> illustrates that this is a powerful way to implement efficient patrols. Here we modeled endotaxis on the binary-tree labyrinth, using the standard parameters useful for exploration, exploitation, and homing in previous sections. To this we added a habituation in the point cells with exponential recovery dynamics. Formally, the procedure is defined by <xref ref-type="statement" rid="alg3">Algorithm 3</xref>.</p>
<fig position="float" fig-type="figure" id="alg3"><label>Algorithm 3</label><caption><title>Patrolling</title></caption><graphic xlink:href="461751v2_alg3.tif"/></fig>
<p>With appropriate choices of habituation <italic>&#x03B2;</italic> and recovery time <italic>&#x03C4;</italic> the agent does in fact execute a perfect patrol path on the binary tree, traversing every edge of the graph exactly once, and then repeating that sequence indefinitely (<xref rid="fig8" ref-type="fig">Fig 8A</xref>). For this to work, some habituation must persist for the time taken to traverse the entire tree; in this simulation we used <italic>&#x03C4;</italic> = 100 steps on a graph that requires 252 steps. As in all applications of endotaxis, the performance also depends on the readout noise <italic>&#x03F5;</italic>. For increasing readout noise, the agent&#x2019;s behavior transitions gradually from the perfect patrol to a random walk (<xref rid="fig8" ref-type="fig">Fig 8B</xref>). The patrolling behavior of real mice is situated about halfway along that range, at an equivalent readout noise of <italic>&#x03F5;</italic> = 1 (<xref rid="fig8" ref-type="fig">Fig 8B</xref>).</p>
<p>Finally, this suggests a unified explanation for exploration and patrolling: The agent follows the output of the &#x201C;neglect&#x201D; cell, which is just the sum total of the map output. However, in the early exploration phase, when the agent is still assembling the cognitive map, it gives the neglect signal zero or low weight, so the turning decisions are dominated by readout noise and produce something close to a random walk. Lateron, the agent assigns a higher weight to the neglect signal, which shifts the behavior towards systematic patrolling. In our simulations, an intrinsic readout noise of <italic>&#x03F5;</italic> = 0.01 is sufficiently low to enable even a perfect patrol path (<xref rid="fig8" ref-type="fig">Fig 8B</xref>).</p>
<p>In summary, the core model of endotaxis can be enhanced by adding a basic form of habituation at the input neurons. In the endotaxis model this allows the agent to implement an effective patrolling policy that steers towards regions which have been neglected for a while. Of course, habituation among point cells will also change the dynamics of map learning during the exploration phase. We found that both map and goal synapses are still learned effectively, and navigation to targets is only minimally affected by habituation (Suppl Fig 10).</p>
</sec>
<sec id="s9">
<label>9</label>
<title>Discussion</title>
<sec id="s9a">
<label>9.1</label>
<title>Summary of claims</title>
<p>We have presented a biologically plausible neural mechanism that can support learning, navigation, and problem solving in complex environments. The algorithm, called <italic>endotaxis</italic>, offers an end-to-end solution for assembling a cognitive map (<xref rid="fig4" ref-type="fig">Fig 4</xref>), locating interesting targets within that map, navigating to those targets (<xref rid="fig5" ref-type="fig">Fig 5</xref>), as well as accessory functions like instant homing (<xref rid="fig7" ref-type="fig">Fig 7</xref>) and effective patrolling (<xref rid="fig8" ref-type="fig">Fig 8</xref>). Conceptually, it is related to chemotaxis, namely the ability to follow an odor signal to its source, which is shared universally by most or all motile animals. The endotaxis network creates an internal &#x201C;virtual odor&#x201D; which the animal can follow to reach any chosen target location (<xref rid="fig1" ref-type="fig">Fig 1</xref>). When the agent begins to explore the environment, the network learns both the structure of the space, namely how various points are connected, and the location of valuable resources (<xref rid="fig4" ref-type="fig">Fig 4</xref>). After sufficient exploration the agent can then navigate back to those target locations from any point in the environment (<xref rid="fig5" ref-type="fig">Fig 5</xref>). Beyond spatial navigation, endotaxis can also learn the solution to purely cognitive tasks (<xref rid="fig5" ref-type="fig">Fig 5</xref>) that can be formulated as search on a graph (Sec 3). In the following sections we consider how these findings relate to some well-established phenomena and results on animal navigation.</p>
</sec>
<sec id="s9b">
<label>9.2</label>
<title>Animal behavior</title>
<p>The millions of animal species no doubt use a wide range of mechanisms to get around their environment, and it is worth specifying which types of navigation endotaxis might solve. First, the learning mechanism proposed here applies to complex environments, namely those in which discrete paths form sparse connections between points. For a bird or a bat this is less of a concern, because it can get from every point to any other &#x201C;as the crow flies&#x201D;. For a rodent and many other terrestrial animals, on the other hand, the paths they may follow are constrained by obstacles and by the need to remain under cover. In those conditions the brain cannot assume that the distance between points is given by euclidean geometry, or that beacons for a goal will be visible in a straight line from far away, or that a target can be reached by following a known heading. As a concrete example, a mouse wishing to exit from deep inside a labyrinth (<xref rid="fig7" ref-type="fig">Fig 7A</xref>, [<xref ref-type="bibr" rid="c43">43</xref>]) can draw little benefit from knowing the distance and heading of the entrance.</p>
<p>Second, we are focusing on the early experience with a new environment. Endotaxis can get an animal from zero knowledge to a cognitive map that allows reliable navigation towards goals discovered on a previous foray. It explains how an animal can return home from inside a complex environment on the first attempt [<xref ref-type="bibr" rid="c43">43</xref>], or navigate to a special location after encountering it just once (<xref rid="fig6" ref-type="fig">Figs 6</xref>, <xref rid="fig7" ref-type="fig">7</xref>). But it does not implement more advanced routines of spatial reasoning, such as stringing a habitual sequence of actions together into one, or deliberating internally to plan entire routes. Clearly, given enough time in an environment, animals may develop algorithms other than the beginner&#x2019;s choice proposed here.</p>
<p>A key characteristic of endotaxis, distinct from other forms of navigation, is the reliance on trial-and-error. The agent does not deliberate to plan the shortest path to the goal. Instead, it finds the shortest path by locally sampling the real-world actions available at its current point, and choosing the one that maximizes the virtual odor signal. In fact, there is strong evidence that animals navigate by real-world trial-and-error, at least in the early phase of learning [<xref ref-type="bibr" rid="c41">41</xref>]. Lashley [<xref ref-type="bibr" rid="c31">31</xref>], in his first scientific paper on visual discrimination in the rat, reported that rats at a decision point often hesitate &#x201C;with a swaying back and forth between the passages&#x201D;. These actions &#x2013; called &#x201C;vicarious trial and error&#x201D; &#x2013; look eerily like sniffing out an odor gradient, but they occur even in absence of any olfactory cues. Similar behaviors occur in arthropods [<xref ref-type="bibr" rid="c51">51</xref>] and humans [<xref ref-type="bibr" rid="c44">44</xref>] when poised at a decision point. We suggest that the animal does indeed sample a gradient, not of an odor, but of an internally generated virtual odor that reflects the proximity to the goal. The animal seems to use the same policy of spatial sampling that it would apply to a real odor signal.</p>
<p>Frequently a rodent stopped at a maze junction merely turns its head side-to-side, rather than walking down a corridor to sample the gradient. Within the endotaxis model, this could be explained if some of the point cells in the lowest layer (<xref rid="fig1" ref-type="fig">Fig 1B</xref>) are selective for head direction or for the view down a specific corridor. During navigation, activation of that &#x201C;direction cell&#x201D; systematically precedes activation of point cells further down that corridor. Therefore the direction cell gets integrated into the map network. From then on, when the animal turns in that direction, this action takes a step along the graph of the environment without requiring a walk in ultimately fruitless directions. In this way the agent can sample the goal gradient while minimizing energy expenditure.</p>
<p>Once the animal gains familiarity with the environment, it performs fewer of the vicarious trial and error movements, and instead moves smoothly through multiple intersections in a row [<xref ref-type="bibr" rid="c41">41</xref>]. This may reflect a transition between different modes of navigation, from the early endotaxis, where every action gets evaluated on its real-world merit, to a mode where many actions are strung together into behavioral motifs. Eventually the animal may also develop an internal forward model for the effects of its own actions, which would allow for prospective planning of an entire route [<xref ref-type="bibr" rid="c40">40</xref>]. An interesting direction for future research is to seek a neuromorphic circuit model for such action planning; perhaps it can be built naturally on top of the endotaxis circuit.</p>
</sec>
<sec id="s9c">
<label>9.3</label>
<title>Brain circuits</title>
<p>The proposed circuitry (<xref rid="fig1" ref-type="fig">Fig 1</xref>) relates closely to some real existing neural networks: the so-called cerebellum-like circuits. They include the insect mushroom body, the mammalian cerebellum, and a host of related structures in non-mammalian vertebrates [<xref ref-type="bibr" rid="c5">5</xref>, <xref ref-type="bibr" rid="c17">17</xref>]. The distinguishing features are: A large population of neurons with selective responses (e.g. Kenyon cells, cerebellar granule cells), massive convergence from that population onto a smaller set of output neurons (e.g. Mushroom body output neurons, Purkinje cells), and synaptic plasticity at the output neurons gated by signals from the animal&#x2019;s experience (e.g. dopaminergic inputs to mushroom body, climbing fiber input to cerebellum). It is thought that this plasticity creates an adaptive filter by which the output neurons learn to predict the behavioral consequences of the animal&#x2019;s actions [<xref ref-type="bibr" rid="c5">5</xref>, <xref ref-type="bibr" rid="c56">56</xref>]. This is what the goal cells do in the endotaxis model.</p>
<p>The analogy to the insect mushroom body invites a broader interpretation of what purpose that structure serves. In the conventional picture the mushroom body helps with odor discrimination and forms memories of discrete odors that are associated with salient experience [<xref ref-type="bibr" rid="c25">25</xref>]. Subsequently the animal can seek or avoid those odors. But insects can also use odors as landmarks in the environment. In this more general form of navigation, the odor is not a goal in itself, but serves to mark a route towards some entirely different goal [<xref ref-type="bibr" rid="c30">30</xref>, <xref ref-type="bibr" rid="c47">47</xref>]. In ants and bees, the mushroom body receives massive visual input, and the insect uses discrete panoramic views of the landscape as markers for its location [<xref ref-type="bibr" rid="c9">9</xref>, <xref ref-type="bibr" rid="c48">48</xref>, <xref ref-type="bibr" rid="c54">54</xref>]. Our analysis shows how the mushroom body circuitry can tie together these discrete points into a cognitive map that supports navigation towards arbitrary goal locations.</p>
<p>In this picture a Kenyon cell that fires only under a specific pattern of receptor activation becomes selective for a specific location in the environment, and thus would play the role of a map cell in the endotaxis circuit (<xref rid="fig1" ref-type="fig">Fig 1</xref>). <sup><xref ref-type="fn" rid="FN5">5</xref></sup> After sufficient exploration of the reward landscape the mushroom body output neurons come to encode the animal&#x2019;s proximity to a desirable goal, and that signal can guide a trial-and-error mechanism for steering. In fact, mushroom body output neurons are known to guide the turning decisions of the insect [<xref ref-type="bibr" rid="c3">3</xref>], perhaps through their projections to the central complex [<xref ref-type="bibr" rid="c32">32</xref>], an area critical to the animal&#x2019;s turning behavior. Conceivably, this is where the insect&#x2019;s basic chemotaxis module is implemented, namely the policy for ascending on a goal signal.</p>
<p>Beyond the cerebellum-like circuits, the general ingredients of the endotaxis model &#x2013; recurrent synapses, Hebbian learning, many-to-one convergence &#x2013; are found commonly in other brain areas including the mammalian neocortex and hippocampus. In the rodent hippocampus, an interesting candidate for map cells are the pyramidal cells in area CA3. Many of these neurons exhibit place fields and they are recurrently connected by synapses with Hebbian plasticity. It was suggested early on that random exploration by the agent produces correlations between nearby place cells, and thus the synaptic weights among those neurons might be inversely related to the distance between their place fields [<xref ref-type="bibr" rid="c38">38</xref>, <xref ref-type="bibr" rid="c42">42</xref>]. However, simulations showed that the synapses are substantially strengthened only among immediately adjacent place fields [<xref ref-type="bibr" rid="c39">39</xref>, <xref ref-type="bibr" rid="c42">42</xref>], thus limiting the utility for global navigation across the environment. The learning algorithm (<xref ref-type="statement" rid="alg2">Alg 2</xref>) implements this local connectivity. We show that a useful global distance function emerges from the <italic>output</italic> of the recurrent network (<xref ref-type="disp-formula" rid="eqn11">Eqn 11</xref>), even though its synaptic structure is strictly local. Further, we offer a biologically realistic circuit (<xref rid="fig1" ref-type="fig">Fig 1B</xref>) that can read out this distance function for subsequent navigation.</p>
</sec>
<sec id="s9d">
<label>9.4</label>
<title>Neural signals</title>
<p>The endotaxis circuit proposes three types of neurons &#x2013; point cells, map cells, and goal cells &#x2013; and it is instructive to compare their expected signals to existing recordings from animal brains during navigation behavior. Much of that prior work has focused on the rodent hippocampal formation [<xref ref-type="bibr" rid="c36">36</xref>], but we do not presume that endotaxis is localized to that structure. The three cell types in the model all have place fields, in that they fire preferentially in certain regions within the graph of the environment. However, they differ in important respects:</p>
<p>The place field is smallest for a point cell; somewhat larger for a map cell, owing to recurrent connections in the map network; and larger still for goal cells, owing to additional pooling in the goal network. Such a wide range of place field sizes has indeed been observed in surveys of the rodent hippocampus, spanning at least a factor of 10 in diameter [<xref ref-type="bibr" rid="c29">29</xref>, <xref ref-type="bibr" rid="c55">55</xref>]. Some place cells show a graded firing profile that fills the available environment. Furthermore one finds more place fields near the goal location of a navigation task, even when that location has no overt markers [<xref ref-type="bibr" rid="c27">27</xref>]. Both of those characteristics are expected of the goal cells in the endotaxis model.</p>
<p>The endotaxis model assumes that point cells exist from the very outset in any environment. Indeed, many place cells in the rodent hippocampus appear within minutes of the animal&#x2019;s entry into an arena [<xref ref-type="bibr" rid="c19">19</xref>, <xref ref-type="bibr" rid="c55">55</xref>]. Furthermore, any given environment activates only a small fraction of these neurons. Most of the &#x201C;potential place cells&#x201D; remain silent, presumably because their sensory trigger feature doesn&#x2019;t match any of the locations in the current environment [<xref ref-type="bibr" rid="c2">2</xref>, <xref ref-type="bibr" rid="c15">15</xref>]. In the endotaxis model, each of these sets of point cells is tied into a different map network, which would allow the circuit to maintain multiple cognitive maps in memory [<xref ref-type="bibr" rid="c38">38</xref>].</p>
<p>Goal cells, on the other hand, are expected to have large place fields, centered on a goal location, but extending over much of the environment, so the animal can follow the gradient of their activity [<xref ref-type="bibr" rid="c10">10</xref>]. Indeed such cells have been reported in rat cortex [<xref ref-type="bibr" rid="c26">26</xref>]. In the endotaxis model, a goal cell appears suddenly when the animal first arrives at a memorable location, the input synapses from the map network are potentiated, and the neuron immediately develops a place field (<xref rid="fig4" ref-type="fig">Fig 4</xref>). This prediction is reminiscent of a startling experimental observation in recordings from hippocampal area CA1: A neuron can suddenly start firing with a fully formed place field that may be located anywhere in the environment [<xref ref-type="bibr" rid="c8">8</xref>]. This event appears to be triggered by a calcium plateau potential in the dendrites of the place cell, which potentiates the excitatory synaptic inputs the cell receives. A surprising aspect of this discovery was the large extent of the resulting place field, which requires the animal several seconds to cover. Subsequent cellular measurements indeed revealed a plasticity mechanism that extends over several seconds [<xref ref-type="bibr" rid="c33">33</xref>]. The endotaxis model relies on just such a plasticity rule for map learning (<xref ref-type="statement" rid="alg2">Alg 2</xref>), that can correlate events at subsequent nodes on the agent&#x2019;s trajectory.</p>
</sec>
<sec id="s9e">
<label>9.5</label>
<title>Learning theories</title>
<p>Endotaxis can be seen as a form of reinforcement learning [<xref ref-type="bibr" rid="c50">50</xref>]: The agent learns from rewards or punishments in the environment and develops a policy that allows for subsequent navigation to special locations. The goal signal in endotaxis plays the role of a value function in reinforcement learning theory. From experience the agent learns to compute that value function for every location and control its actions accordingly. Within the broad universe of reinforcement learning algorithms, endotaxis combines some special features as well as limitations that are inspired by empirical phenomena of animal learning, and also make it suitable for a biological implementation.</p>
<p>First, most of the learning happens without any reinforcement. During the exploratory random walk, endotaxis learns the topology of the environment, specifically by updating the synapses in the map network (<bold>M</bold> in <xref rid="fig1" ref-type="fig">Fig 1B</xref>). Rewards are not needed for this map learning, and indeed the goal signal remains zero during this period (<xref rid="fig4" ref-type="fig">Fig 4</xref>). Once a reward is encountered, the goal synapses (<bold>G</bold> in <xref rid="fig1" ref-type="fig">Fig 1B</xref>) get set, and the goal signal instantly spreads through the known portion of the environment. Thus, the agent learns how to navigate to the goal location from a single reinforcement (<xref rid="fig6" ref-type="fig">Fig 6</xref>). This is possible because the ground has been prepared, as it were, by learning a map. In animal behavior the acquisition of a cognitive map without rewards is called <italic>latent learning</italic>. Early debates in animal psychology pitched latent learning and reinforcement learning as alternative explanations [<xref ref-type="bibr" rid="c52">52</xref>]. Instead, in the endotaxis algorithm, neither can function without the other, as the goal signal explicitly depends on both the map and goal synapses (<xref ref-type="disp-formula" rid="eqn13">Eqn 13</xref>, <xref ref-type="statement" rid="alg1">Alg 1</xref>).</p>
<p>In the context of reinforcement learning, the map represents a simple model of the environment on which the value function can be computed [<xref ref-type="bibr" rid="c34">34</xref>, <xref ref-type="bibr" rid="c49">49</xref>]. The neural signals in endotaxis bear some similarity to the so-called <italic>successor representation</italic> [<xref ref-type="bibr" rid="c12">12</xref>, <xref ref-type="bibr" rid="c13">13</xref>, <xref ref-type="bibr" rid="c46">46</xref>]. This is a proposal for how the brain might encode the current state of the agent, intended to simplify the mathematics of time-difference reinforcement learning. In that representation, there is a neuron for every state of the agent, and the activity of neuron <italic>j</italic> is the time-discounted probability that the agent will find itself at state <italic>j</italic> in the future. Similarly, the output of the endotaxis map network is related to future states of the agent (<xref ref-type="disp-formula" rid="eqn5">Eqns 5</xref>, <xref ref-type="disp-formula" rid="eqn18">18</xref>). However, there is an important difference: The successor representation (at least as currently discussed) is designed to improve learning under a particular policy [<xref ref-type="bibr" rid="c13">13</xref>, <xref ref-type="bibr" rid="c16">16</xref>, <xref ref-type="bibr" rid="c22">22</xref>]. By contrast the endotaxis map network is independent of policy; it just reflects the objective connectivity of the environment. Knowing that connectivity is a foundation for developing any specific policy. The algorithm for learning the map (<xref ref-type="statement" rid="alg2">Alg 2</xref>) is insensitive to what policy the agent uses: A synapse between map cells gets formed when a particular link is traveled, regardless of why it is traveled. A systematic walk through the environment (<xref rid="fig8" ref-type="fig">Fig 8</xref>) learns the exact same map synapses as a random walk.</p>
<p>Second, endotaxis does not tabulate the list of available actions at each state. That information remains externalized in the environment: The agent simply tries whatever actions are available at the moment, then picks the best one. This is a characteristically biological mode of action and most organisms have a behavioral routine that executes such trial-and-error. This &#x201C;externalized cognition&#x201D; simplifies the learning task: For any given navigation policy the agent needs to learn only one scalar function of location, namely the goal signal. By comparison, many machine learning algorithms develop a value function for state-action pairs, which then allows more sophisticated planning [<xref ref-type="bibr" rid="c34">34</xref>, <xref ref-type="bibr" rid="c50">50</xref>]. The relative simplicity of the endotaxis circuit depends on the limitation to learning only state functions.</p>
<p>Finally, endotaxis is &#x201C;always on&#x201D;. There is no separation of learning from recall. The map and goal synapses can continue to update even while the agent is navigating, homing, or patrolling. Learning continues to happen automatically &#x201C;under the hood&#x201D;. In fact, many policies are learned simultaneously: Each goal cell represents a different value function, and their synapses all are updated in parallel as the agent encounters different targets. Meanwhile the animal pursues its current needs by choosing one of the goal signals (with the mode switch in <xref rid="fig1" ref-type="fig">Fig 1B</xref>) and feeding it to the chemotaxis module for decision making.</p>
</sec>
<sec id="s9f">
<label>9.6</label>
<title>Outlook</title>
<p>Burgess and O&#x2019;Keeffe [<xref ref-type="bibr" rid="c10">10</xref>] pointed out some time ago the benefits of modeling spatial learning with explicit neural circuits rather than purely conceptual arguments: For one, it tests whether a proposed explanation actually works inside of biological realism; second it can offer an interpretation of the profusion of different kinds of place cells one might find in any given brain [<xref ref-type="bibr" rid="c24">24</xref>]. An analogy to the visual system is useful here: There is a profusion of neurons with visual receptive fields. In principle these are all &#x201C;light cells&#x201D;, but by now it is well understood that they appear at different levels of the visual circuitry and play entirely different roles. At the bottom of the hierarchy are photoreceptors that respond when light appears at a particular location. Towards the end of the visual system are neurons that respond selectively to faces independent of viewpoint [<xref ref-type="bibr" rid="c20">20</xref>]. Sophisticated circuit models exist to explain the processing all the way from the retina to IT cortex [<xref ref-type="bibr" rid="c23">23</xref>, <xref ref-type="bibr" rid="c57">57</xref>]. A simple place cell is like a photoreceptor: It responds when the animal is at a particular location. How does the brain perform sophisticated spatial cognition based on that elementary input? To reach an understanding comparable to that of the visual system, we should invest further in end-to-end models for navigation that use biologically plausible neural circuits.</p>
</sec>
</sec>
</body>
<back>
<sec id="s10">
<label>A</label>
<title>Supplement</title>
<sec id="s10a">
<label>A.1</label>
<title>A neuromorphic function to compute the shortest distance on a graph</title>
<p>Here we prove some of the assertions in the text about the relationship between endotaxis goal signals and the distance between two points on a graph. We begin with a more general discussion of graph distance. For an agent navigating on a graph it is very useful to know the shortest graph distance between any two nodes
<disp-formula id="eqn14">
<alternatives><graphic xlink:href="461751v2_eqn14.gif"/></alternatives>
</disp-formula>
</p>
<p>Given this information, one can navigate the shortest route from <italic>x</italic> to <italic>y</italic>: for each of the neighbors of <italic>x</italic>, look up its distance to <italic>y</italic> and step to the neighbor with the shortest distance. Then repeat that process until <italic>y</italic> is reached. Thus the shortest route can be navigated one step at a time without any high-level advanced planning. This is the core idea behind endotaxis.</p>
<p>Finding the shortest path between all pairs of nodes on a graph is a central problem of graph theory, known as &#x201C;all pairs shortest path&#x201D; (APSP) [<xref ref-type="bibr" rid="c58">58</xref>]. Generally, an APSP algorithm delivers a matrix containing the distances <italic>D</italic><sub><italic>ij</italic></sub> for all pairs of nodes. The Floyd-Warshall algorithm [<xref ref-type="bibr" rid="c18">18</xref>] is simple and works even for the more general case of weighted edges between nodes. Unfortunately, we know of no plausible way to implement Floyd-Warshall&#x2019;s three nested loops of comparison statements with neurons.</p>
<p>There is, however, a simple function for APSP that can be solved by a recurrent neural network. Specifically: If a connected, directed graph has adjacency matrix <italic>A</italic><sub><italic>ij</italic></sub> (<xref ref-type="disp-formula" rid="eqn1">Eqn 1</xref>), then with a suitably small positive value of <italic>&#x03B3;</italic> the shortest path distances are given by
<disp-formula id="eqn15">
<alternatives><graphic xlink:href="461751v2_eqn15.gif"/></alternatives>
</disp-formula>
where <bold>1</bold> is the identity matrix, and the half-square brackets mean &#x201C;round up to the nearest integer&#x201D;.</p>
<p><bold>Proof:</bold></p><p>The powers of the adjacency matrix represent the effects of taking multiple steps on the graph, namely
<disp-formula id="ueqn2">
<alternatives><graphic xlink:href="461751v2_ueqn2.gif"/></alternatives>
</disp-formula>
where a path is an ordered sequence of edges on the graph. This can be seen by induction as follows. By definition
<disp-formula id="ueqn3">
<alternatives><graphic xlink:href="461751v2_ueqn3.gif"/></alternatives>
</disp-formula>
</p>
<p>Suppose we know <inline-formula><alternatives><inline-graphic xlink:href="461751v2_inline1.gif"/></alternatives></inline-formula> and want to compute <inline-formula><alternatives><inline-graphic xlink:href="461751v2_inline2.gif"/></alternatives></inline-formula>. Every path from <italic>j</italic> to <italic>i</italic> of length <italic>k</italic> &#x002B; 1 steps has to reach a neighbor of node <italic>i</italic> in <italic>k</italic> steps. Therefore
<disp-formula id="eqn16">
<alternatives><graphic xlink:href="461751v2_eqn16.gif"/></alternatives>
</disp-formula>
</p>
<p>The RHS corresponds to multiplication by <bold>A</bold>, so the solution is
<disp-formula id="ueqn4">
<alternatives><graphic xlink:href="461751v2_ueqn4.gif"/></alternatives>
</disp-formula>
</p>
<p>We are particularly interested in the shortest path from node <italic>j</italic> to node <italic>i</italic>. If the shortest distance <italic>D</italic><sub><italic>ij</italic></sub> from <italic>j</italic> to <italic>i</italic> is <italic>k</italic> steps then there must exist a path of length <italic>k</italic> but not of any length <italic>&#x003C; k</italic>. Therefore
<disp-formula id="eqn17">
<alternatives><graphic xlink:href="461751v2_eqn17.gif"/></alternatives>
</disp-formula>
</p>
<p>Now consider the Taylor series
<disp-formula id="eqn18">
<alternatives><graphic xlink:href="461751v2_eqn18.gif"/></alternatives>
</disp-formula>
</p>
<p>Then
<disp-formula id="eqn19">
<alternatives><graphic xlink:href="461751v2_eqn19.gif"/></alternatives>
</disp-formula>
</p>
<p>We will show that if <italic>&#x03B3;</italic> is chosen positive but small enough then the growth of <inline-formula><alternatives><inline-graphic xlink:href="461751v2_inline3.gif"/></alternatives></inline-formula> with increasing <italic>k</italic> gets eclipsed by the decay of <italic>&#x03B3;</italic><sup><italic>k</italic></sup> such that
<disp-formula id="eqn20">
<alternatives><graphic xlink:href="461751v2_eqn20.gif"/></alternatives>
</disp-formula>
</p>
<p>The left inequality is obvious from <xref ref-type="disp-formula" rid="eqn19">Eqn 19</xref> because <inline-formula><alternatives><inline-graphic xlink:href="461751v2_inline4.gif"/></alternatives></inline-formula> by <xref ref-type="disp-formula" rid="eqn17">Eqn 17</xref>.</p>
<p>To understand the right inequality, note first that <inline-formula><alternatives><inline-graphic xlink:href="461751v2_inline5.gif"/></alternatives></inline-formula> is bounded by a geometric series. From <xref ref-type="disp-formula" rid="eqn16">Eqn 16</xref> it follows that
<disp-formula id="ueqn5">
<alternatives><graphic xlink:href="461751v2_ueqn5.gif"/></alternatives>
</disp-formula>
where <italic>q</italic> is the largest number of neighbors of any node on the graph. So from <xref ref-type="disp-formula" rid="eqn19">Eqn 19</xref>
<disp-formula id="eqn21">
<alternatives><graphic xlink:href="461751v2_eqn21.gif"/></alternatives>
</disp-formula>
</p>
<p>This expression is <inline-formula><alternatives><inline-graphic xlink:href="461751v2_inline6.gif"/></alternatives></inline-formula> (<xref ref-type="disp-formula" rid="eqn20">Eqn 20</xref>) as long as
<disp-formula id="eqn22">
<alternatives><graphic xlink:href="461751v2_eqn22.gif"/></alternatives>
</disp-formula>
</p>
<p>In addition, because
<disp-formula id="ueqn6">
<alternatives><graphic xlink:href="461751v2_ueqn6.gif"/></alternatives>
</disp-formula>
this is satisfied if one chooses <italic>&#x03B3;</italic> such that
<disp-formula id="eqn23">
<alternatives><graphic xlink:href="461751v2_eqn23.gif"/></alternatives>
</disp-formula>
</p>
<p>With that condition on <italic>&#x03B3;</italic>, the inequality (20) holds, and taking the logarithm on both sides leads to the desired result:
<disp-formula id="ueqn7">
<alternatives><graphic xlink:href="461751v2_ueqn7.gif"/></alternatives>
</disp-formula>
</p>
<p>As shown in the text (<xref ref-type="disp-formula" rid="eqn10">Eqn 10</xref>), the endotaxis network, in its linear rate approximation, computes a goal signal equal to the scalar products of the column-vectors in <bold>Y</bold>, namely
<disp-formula id="eqn24">
<alternatives><graphic xlink:href="461751v2_eqn24.gif"/></alternatives>
</disp-formula>
</p>
<p>To understand how that goal signal <italic>E</italic><sub><italic>ij</italic></sub> varies with distance, one can follow arguments parallel to those that led to <xref ref-type="disp-formula" rid="eqn19">Eqn 19</xref>. Using the upper bound by the geometric series (<xref ref-type="disp-formula" rid="eqn21">Eqn 21</xref>) and inserting in <xref ref-type="disp-formula" rid="eqn24">Eqn 24</xref> one finds again that it is possible to choose a <italic>&#x03B3;</italic> small enough to satisfy
<disp-formula id="eqn25">
<alternatives><graphic xlink:href="461751v2_eqn25.gif"/></alternatives>
</disp-formula>
</p>
<p>Under those conditions the goal signal <italic>E</italic><sub><italic>ij</italic></sub> decays exponentially with the graph distance <italic>D</italic><sub><italic>ij</italic></sub>.</p>
<p>In summary, a recurrent neural network seems ideally suited to compute the distance between nodes on a graph, if the nodes are sparsely represented in the network&#x2019;s inputs, and the recurrent connections reflect the connections of the graph. Ultimately, this derives from the correspondence between the network&#x2019;s transfer function (<xref ref-type="disp-formula" rid="eqn5">Eqn 5</xref>) and the function that delivers APSP on a graph (<xref ref-type="disp-formula" rid="eqn15">Eqn 15</xref>).</p>
</sec>
<sec id="s10b">
<label>A.2</label>
<title>The critical gain value</title>
<p>As elaborated in <xref ref-type="sec" rid="s3">Section 3</xref>, there is a benefit to raising the gain <italic>&#x03B3;</italic> of the map neurons, so as to limit the sharp decline of the goal signal across distance. However, there is an upper limit. Recall that the argument linking the recurrent network function to graph distances traces back to the Taylor expansion in <xref ref-type="disp-formula" rid="eqn18">Eqn 18</xref>:
<disp-formula id="ueqn8">
<alternatives><graphic xlink:href="461751v2_ueqn8.gif"/></alternatives>
</disp-formula>
</p>
<p>For a real function (1 &#x2212; <italic>x</italic>)<sup>&#x2212;1</sup>, this Taylor series has a convergence radius of &#x007C;<italic>x</italic>&#x007C; <italic>&#x003C;</italic> 1. The corresponding condition for the matrix series is that the spectral radius <italic>&#x03C1;</italic> of <italic>&#x03B3;</italic><bold>A</bold> must be <italic>&#x003C;</italic> 1:
<disp-formula id="ueqn9">
<alternatives><graphic xlink:href="461751v2_ueqn9.gif"/></alternatives>
</disp-formula>
where <italic>&#x03BB;</italic><sub>1</sub>, &#x2026;, <italic>&#x03BB;</italic><sub><italic>n</italic></sub> are the eigenvalues of <bold>A</bold>. So the critical upper bound on <italic>&#x03B3;</italic> is
<disp-formula id="ueqn10">
<alternatives><graphic xlink:href="461751v2_ueqn10.gif"/></alternatives>
</disp-formula>
</p>
</sec>
<sec id="s10c">
<label>A.3</label>
<title>Average navigated distance</title>
<p>In the text we often assess the performance of an endotaxis agent by considering point-to-point navigation between all pairs of points on a graph. Given the readout noise <italic>&#x03F5;</italic> that affects the goal signal, navigation is a stochastic process with many random decisions along the route. Different random instantiations of the process will produce routes of different lengths. Fortunately, there is a way to calculate the expectation value of the route length without any Monte-Carlo simulation.</p>
<p>Consider navigation to goal node <italic>y</italic>. From the state of the network (<bold>M</bold> and <bold>G</bold>) we compute the goal signal <italic>E</italic><sub><italic>yj</italic></sub> at every node <italic>j</italic>. When the agent is at node <italic>j</italic> it chooses among the neighbor nodes the one with the highest sum of goal signal and noise (1). Based on the goal signal <italic>E</italic><sub><italic>yj</italic></sub> and the noise <italic>&#x03F5;</italic> one can compute the probability for each such possible step from <italic>j</italic>. This leads to a transition matrix for the random walk
<disp-formula id="ueqn11">
<alternatives><graphic xlink:href="461751v2_ueqn11.gif"/></alternatives>
</disp-formula>
</p>
<p>Subsequent decisions along the route are independent of each other. Hence the process is a Markov chain. Then we make use of a well-known result for first-capture times on a Markov chain to compute the expected number of steps to arrival at <italic>y</italic> starting from any node <italic>x</italic>.</p>
<p>Note the method assumes that the process is stationary Markov, such that the goal signal <italic>E</italic><sub><italic>xy</italic></sub> does not change in the course of navigation. In our analysis of patrolling (<xref rid="fig8" ref-type="fig">Figs 8</xref> and <xref rid="fig10" ref-type="fig">10</xref>) this assumption is violated, because the habituation state of the point cells depends on what path the agent took to the current node. In those cases we resorted to Monte Carlo simulations to estimate the distribution of route lengths.</p>
</sec>
<sec id="s10d">
<label>A.4</label>
<title>Simulations</title>
<p>Numerical simulations were performed as described, see <xref ref-type="statement" rid="alg1">Algorithms 1</xref>, <xref ref-type="statement" rid="alg2">2</xref>, <xref ref-type="statement" rid="alg3">3</xref>, <xref ref-type="statement" rid="alg4">4</xref>. Parameter settings are listed in the text and figure captions. The sensitivity to parameters is reported in <xref rid="fig6" ref-type="fig">Figure 6</xref>. Code that produced all the results is available in a public repository.</p>
</sec>
<sec id="s10e">
<label>A.5</label>
<title>Forgetting of links and resources</title>
<p>In <xref ref-type="sec" rid="s4">section 4</xref> we discuss the learning algorithm that acquires the connectivity of the environment and the locations of resources. It reacts rapidly to the appearance of new links in the environment: As soon as the agent travels from one point to another, the synapse between the corresponding map cells gets established. Suppose now that a previously existing link becomes blocked: How can one remove the corresponding synapse from the map? A simple solution would be to let all synapses decay over time, balanced by strengthening whenever a link gets traveled. In that case the entire map would be forgotten when the animal goes to sleep for a few hours, whereas it is clear that animals retain such maps over many days. Instead, one wants a mode of <italic>active</italic> forgetting: Memory of the link from node <italic>i</italic> to <italic>j</italic> should be weakened only if the agent find itself at node <italic>i</italic> and repeatedly chooses not to go to <italic>j</italic>. One can formalize this in the following algorithm, which differs only slightly from <xref ref-type="statement" rid="alg2">Alg 2</xref>:</p>
<fig position="float" fig-type="figure" id="alg4"><label>Algorithm 4</label><caption><title>Learning and forgetting</title></caption><graphic xlink:href="461751v2_alg4.tif"/></fig>
<p>Here the added parameter <italic>&#x03B4;</italic> determines how much a map synapse gets depressed each time the corresponding link is not chosen. Similarly, goal synapses decay if their prediction for a resource exceeds the resource signal received by the goal cell. The synaptic learning rule resembles the BCM rule [<xref ref-type="bibr" rid="c7">7</xref>]: Synaptic modification is conditional on presynaptic activity, and leads to either potentiation or depression depending on the level of post-synaptic activity.</p>
<p><xref rid="fig9" ref-type="fig">Figure 9</xref> illustrates this process with a simulation analogous to <xref rid="fig4" ref-type="fig">Fig 4</xref>. The agent explores a ring graph by a random walk. At some point a new link appears clear across the ring. Later on that link disappears again. Acquisition of the link happens very quickly, within a single time step (<xref rid="fig9" ref-type="fig">Fig 9A, C</xref>). Forgetting that link takes longer, on the order of several hundred steps (<xref rid="fig9" ref-type="fig">Fig 9A, D, E</xref>). In this simulation <italic>&#x03B4;</italic> = 0.1, so the map synapses decay by about 10&#x0025; whenever a link is not traveled. One could of course accelerate that with a higher <italic>&#x03B4;</italic>, but at the cost of destabilizing the entire map. Even the synapses for intact links get depressed frequently (<xref rid="fig9" ref-type="fig">Fig 9E</xref>), because the random choices of the agent lead it to take any given link only a fraction of the time.</p>
<fig id="fig9" position="float" fig-type="figure">
<label>Figure 9:</label>
<caption><title>Forgetting a link during exploration.</title>
<p><bold>(A)</bold> Simulation of a random walk on a ring with 14 nodes as in <xref ref-type="fig" rid="fig4">Fig 4</xref>. Left: Layout of the ring, with resource locations marked in blue. The walk progresses in 1000 time steps (top to bottom); with the agent&#x2019;s position marked in red (nodes 0-13, horizontal axis). At each time the color map shows the goal signal that would be produced if the agent were at position &#x2018;Node&#x2019;. White horizontal lines mark the appearance of a new link between nodes 4 and 11 at <italic>t</italic> = 200, and disappearance of that link at <italic>t</italic> = 400. <bold>(B)</bold> The matrix <bold>M</bold> of map synapses at various times. The pixel in row <italic>i</italic> and column <italic>j</italic> represents the matrix element <italic>M</italic><sub><italic>ij</italic></sub>. Color purple = 0. Note the first few steps (number above graph) each add a new synapse. Eventually, <bold>M</bold> reflects the adjacency matrix of nodes on the graph, and changes as a link is added and removed. <bold>(C)</bold> Goal signals just before and just after the agent travels the new link. <bold>(D)</bold> Goal signals just before the link disappears and at the end of the walk. <bold>(E)</bold> Strength of two synapses in the map, <italic>M</italic><sub>4,5</sub> and <italic>M</italic><sub>4,11</sub>, plotted against time during the random walk. Model parameters: <italic>&#x03B3;</italic> = 0.32, <italic>&#x03B8;</italic> = 0.27, <italic>&#x03B1;</italic> = 1, <italic>&#x03B4;</italic> = 0.1.</p></caption>
<graphic xlink:href="461751v2_fig9.tif"/>
</fig>
<p>One limitation of the endotaxis agent is that it does not keep a record of what actions are available at each node. Instead, it leaves that information in the environment (see Discussion) and simply tries all the actions that are available. When faced with a blocked tunnel, the endotaxis agent does not know that this was previously available. Clearly, a more advanced model of the world that includes a state-action table would allow more effective editing of the cognitive map.</p>
</sec>
<sec id="s10f">
<label>A.6</label>
<title>Habituation in point cells</title>
<p>In <xref ref-type="sec" rid="s8">section 8</xref> we discuss an extension of the core endotaxis model in which a point neuron undergoes habituation after the agent passes through its node. With every visit, the neuron&#x2019;s sensitivity declines by a factor e<sup>&#x2212;<italic>&#x03B2;</italic></sup>. Between visits the sensitivity gradually returns towards 1 with an exponential recovery time of <italic>&#x03C4;</italic> steps, see Algorithm 3.</p>
<p>This addition to the model changes the dynamics of the network input throughout the phases of exploration, navigation, and patrolling. We explored how the resulting performance is affected, by applying a strong habituation that decays slowly (<italic>&#x03B2;</italic> = 1.2, <italic>&#x03C4;</italic> = 100) and comparing to the basic model with no habituation (<italic>&#x03B2;</italic> = 0). During the learning phase, when the map and goal synapses are established via a random walk, the main change is that it takes somewhat longer to learn the map. This is because synaptic updates happen only when both pre- and post-synaptic map cells exceed a threshold (see <xref ref-type="statement" rid="alg2">Alg 2</xref>), and that requires that both of the respective point neurons be in a high-sensitivity state. In our simulations we extended the random walk for exploration by a factor of 3. Remarkably all the parameter settings (<italic>&#x03B3;, &#x03B8;, &#x03B1;</italic>) that support learning and navigating under standard conditions (<xref rid="fig6" ref-type="fig">Fig 6</xref>), work well with habituation as well.</p>
<p>To illustrate the overall effect that habituation has on performance, we simulated navigation between all pairs of nodes on the binary-tree graph of <xref rid="fig8" ref-type="fig">Fig 8</xref>. For every pair of start and end nodes we asked how the actual navigated distance compared to the shortest graph distance. <xref rid="fig10" ref-type="fig">Figure 10</xref> shows that performance is affected only slightly. At the standard noise value <italic>&#x03F5;</italic> = 0.01 used in other simulations, the range of navigation extends over 10 steps under both conditions.</p>
<fig id="fig10" position="float" fig-type="figure">
<label>Figure 10:</label>
<caption><title>Navigation performance with and without habituation.</title>
<p>Navigated distance on the binary-tree maze, displayed as in <xref ref-type="fig" rid="fig5">Fig 5E</xref>. <bold>Left:</bold> An agent with strong habituation: <italic>&#x03B2;</italic> = 1.2, <italic>&#x03C4;</italic> = 100. <bold>Right:</bold> no habituation: <italic>&#x03B2;</italic> = 0. The agent learned the map and the goal signals for every node during a random walk with 30,000 steps. Then the agent navigated between all pairs of points on the maze. Graphs show the median &#x00B1; 10/90 percentile of the navigated distance for all routes with the same graph distance. Other model parameters: <italic>&#x03B3;</italic> = 0.32, <italic>&#x03B8;</italic> = 0.27, <italic>&#x03B1;</italic> = 1, <italic>&#x03F5;</italic> as listed.</p></caption>
<graphic xlink:href="461751v2_fig10.tif"/>
</fig>
</sec>
</sec>
<ref-list>
<title>References</title>
<ref id="c1"><label>[1]</label><mixed-citation publication-type="journal"><string-name><surname>Aboitiz</surname>, <given-names>F.</given-names></string-name> and <string-name><surname>Montiel</surname>, <given-names>J. F.</given-names></string-name> (<year>2015</year>). <article-title>Olfaction, navigation, and the origin of isocortex</article-title>. <source>Frontiers in Neuroscience</source>, <volume>9</volume>.</mixed-citation></ref>
<ref id="c2"><label>[2]</label><mixed-citation publication-type="journal"><string-name><surname>Alme</surname>, <given-names>C. B.</given-names></string-name>, <string-name><surname>Miao</surname>, <given-names>C.</given-names></string-name>, <string-name><surname>Jezek</surname>, <given-names>K.</given-names></string-name>, <string-name><surname>Treves</surname>, <given-names>A.</given-names></string-name>, <string-name><surname>Moser</surname>, <given-names>E. I.</given-names></string-name>, and <string-name><surname>Moser</surname>, <given-names>M.-B.</given-names></string-name> (<year>2014</year>). <article-title>Place cells in the hippocampus: Eleven maps for eleven rooms</article-title>. <source>Proceedings of the National Academy of Sciences</source>, <volume>111</volume>(<issue>52</issue>):<fpage>18428</fpage>&#x2013;<lpage>18435</lpage>.</mixed-citation></ref>
<ref id="c3"><label>[3]</label><mixed-citation publication-type="journal"><string-name><surname>Aso</surname>, <given-names>Y.</given-names></string-name>, <string-name><surname>Sitaraman</surname>, <given-names>D.</given-names></string-name>, <string-name><surname>Ichinose</surname>, <given-names>T.</given-names></string-name>, <string-name><surname>Kaun</surname>, <given-names>K. R.</given-names></string-name>, <string-name><surname>Vogt</surname>, <given-names>K.</given-names></string-name>, <string-name><surname>Belliart-Guerin</surname>, <given-names>G.</given-names></string-name>, <string-name><surname>Placais</surname>, <given-names>P. Y.</given-names></string-name>, <string-name><surname>Robie</surname>, <given-names>A. A.</given-names></string-name>, <string-name><surname>Yamagata</surname>, <given-names>N.</given-names></string-name>, <string-name><surname>Schnaitmann</surname>, <given-names>C.</given-names></string-name>, <string-name><surname>Rowell</surname>, <given-names>W. J.</given-names></string-name>, <string-name><surname>Johnston</surname>, <given-names>R. M.</given-names></string-name>, <string-name><surname>Ngo</surname>, <given-names>T. T.</given-names></string-name>, <string-name><surname>Chen</surname>, <given-names>N.</given-names></string-name>, <string-name><surname>Korff</surname>, <given-names>W.</given-names></string-name>, <string-name><surname>Nitabach</surname>, <given-names>M. N.</given-names></string-name>, <string-name><surname>Heberlein</surname>, <given-names>U.</given-names></string-name>, <string-name><surname>Preat</surname>, <given-names>T.</given-names></string-name>, <string-name><surname>Branson</surname>, <given-names>K. M.</given-names></string-name>, <string-name><surname>Tanimoto</surname>, <given-names>H.</given-names></string-name>, and <string-name><surname>Rubin</surname>, <given-names>G. M.</given-names></string-name> (<year>2014</year>). <article-title>Mushroom body output neurons encode valence and guide memory-based action selection in Drosophila</article-title>. <source>Elife</source>, <volume>3</volume>:<fpage>e04580</fpage>.</mixed-citation></ref>
<ref id="c4"><label>[4]</label><mixed-citation publication-type="journal"><string-name><surname>Baker</surname>, <given-names>K. L.</given-names></string-name>, <string-name><surname>Dickinson</surname>, <given-names>M.</given-names></string-name>, <string-name><surname>Findley</surname>, <given-names>T. M.</given-names></string-name>, <string-name><surname>Gire</surname>, <given-names>D. H.</given-names></string-name>, <string-name><surname>Louis</surname>, <given-names>M.</given-names></string-name>, <string-name><surname>Suver</surname>, <given-names>M. P.</given-names></string-name>, <string-name><surname>Verhagen</surname>, <given-names>J. V.</given-names></string-name>, <string-name><surname>Nagel</surname>, <given-names>K. I.</given-names></string-name>, and <string-name><surname>Smear</surname>, <given-names>M. C.</given-names></string-name> (<year>2018</year>). <article-title>Algorithms for Olfactory Search across Species</article-title>. <source>The Journal of Neuroscience</source>, <volume>38</volume>(<issue>44</issue>):<fpage>9383</fpage>&#x2013;<lpage>9389</lpage>.</mixed-citation></ref>
<ref id="c5"><label>[5]</label><mixed-citation publication-type="journal"><string-name><surname>Bell</surname>, <given-names>C. C.</given-names></string-name>, <string-name><surname>Han</surname>, <given-names>V.</given-names></string-name>, and <string-name><surname>Sawtell</surname>, <given-names>N. B.</given-names></string-name> (<year>2008</year>). <article-title>Cerebellum-like structures and their implications for cerebellar function</article-title>. <source>Annual Review of Neuroscience</source>, <volume>31</volume>:<fpage>1</fpage>&#x2013;<lpage>24</lpage>.</mixed-citation></ref>
<ref id="c6"><label>[6]</label><mixed-citation publication-type="journal"><string-name><surname>Berg</surname>, <given-names>H. C.</given-names></string-name> (<year>1988</year>). <article-title>A physicist looks at bacterial chemotaxis</article-title>. <source>Cold Spring Harb Symp Quant Biol</source>, <volume>53</volume> <issue>Pt 1</issue>:<fpage>1</fpage>&#x2013;<lpage>9</lpage>.</mixed-citation></ref>
<ref id="c7"><label>[7]</label><mixed-citation publication-type="journal"><string-name><surname>Bienenstock</surname>, <given-names>E. L.</given-names></string-name>, <string-name><surname>Cooper</surname>, <given-names>L. N.</given-names></string-name>, and <string-name><surname>Munro</surname>, <given-names>P. W.</given-names></string-name> (<year>1982</year>). <article-title>Theory for the development of neuron selectivity: Orientation specificity and binocular interaction in visual cortex</article-title>. <source>Journal of Neuroscience</source>, <volume>2</volume>(<issue>1</issue>):<fpage>32</fpage>&#x2013;<lpage>48</lpage>.</mixed-citation></ref>
<ref id="c8"><label>[8]</label><mixed-citation publication-type="journal"><string-name><surname>Bittner</surname>, <given-names>K. C.</given-names></string-name>, <string-name><surname>Milstein</surname>, <given-names>A. D.</given-names></string-name>, <string-name><surname>Grienberger</surname>, <given-names>C.</given-names></string-name>, <string-name><surname>Romani</surname>, <given-names>S.</given-names></string-name>, and <string-name><surname>Magee</surname>, <given-names>J. C.</given-names></string-name> (<year>2017</year>). <article-title>Behavioral time scale synaptic plasticity underlies CA1 place fields</article-title>. <source>Science</source>, <volume>357</volume>(<issue>6355</issue>):<fpage>1033</fpage>&#x2013;<lpage>1036</lpage>.</mixed-citation></ref>
<ref id="c9"><label>[9]</label><mixed-citation publication-type="journal"><string-name><surname>Buehlmann</surname>, <given-names>C.</given-names></string-name>, <string-name><surname>Wozniak</surname>, <given-names>B.</given-names></string-name>, <string-name><surname>Goulard</surname>, <given-names>R.</given-names></string-name>, <string-name><surname>Webb</surname>, <given-names>B.</given-names></string-name>, <string-name><surname>Graham</surname>, <given-names>P.</given-names></string-name>, and <string-name><surname>Niven</surname>, <given-names>J. E.</given-names></string-name> (<year>2020</year>). <article-title>Mushroom Bodies Are Required for Learned Visual Navigation, but Not for Innate Visual Behavior, in Ants</article-title>. <source>Current biology: CB</source>, <volume>30</volume>(<issue>17</issue>):<fpage>3438</fpage>&#x2013;<lpage>3443.e2</lpage>.</mixed-citation></ref>
<ref id="c10"><label>[10]</label><mixed-citation publication-type="journal"><string-name><surname>Burgess</surname>, <given-names>N.</given-names></string-name> and <string-name><surname>O&#x2019;Keefe</surname>, <given-names>J.</given-names></string-name> (<year>1996</year>). <article-title>Neuronal computations underlying the firing of place cells and their role in navigation</article-title>. <source>Hippocampus</source>, <volume>6</volume>(<issue>6</issue>):<fpage>749</fpage>&#x2013;<lpage>762</lpage>.</mixed-citation></ref>
<ref id="c11"><label>[11]</label><mixed-citation publication-type="journal"><string-name><surname>Collett</surname>, <given-names>T. S.</given-names></string-name> and <string-name><surname>Collett</surname>, <given-names>M.</given-names></string-name> (<year>2002</year>). <article-title>Memory use in insect visual navigation</article-title>. <source>Nature Reviews Neuroscience</source>, <volume>3</volume>(<issue>7</issue>):<fpage>542</fpage>&#x2013;<lpage>552</lpage>.</mixed-citation></ref>
<ref id="c12"><label>[12]</label><mixed-citation publication-type="book"><string-name><surname>Corneil</surname>, <given-names>D. S.</given-names></string-name> and <string-name><surname>Gerstner</surname>, <given-names>W.</given-names></string-name> (<year>2015</year>). <chapter-title>Attractor Network Dynamics Enable Preplay and Rapid Path Planning in Maze&#x2013;like Environments</chapter-title>. <source>In Advances in Neural Information Processing Systems</source>, volume <volume>28</volume>. <publisher-name>Curran Associates, Inc</publisher-name>.</mixed-citation></ref>
<ref id="c13"><label>[13]</label><mixed-citation publication-type="journal"><string-name><surname>Dayan</surname>, <given-names>P.</given-names></string-name> (<year>1993</year>). <article-title>Improving generalization for temporal difference learning: The successor representation</article-title>. <source>Neural Computation</source>, <volume>5</volume>(<issue>4</issue>):<fpage>613</fpage>&#x2013;<lpage>624</lpage>.</mixed-citation></ref>
<ref id="c14"><label>[14]</label><mixed-citation publication-type="book"><string-name><surname>Dayan</surname>, <given-names>P.</given-names></string-name> and <string-name><surname>Abbott</surname>, <given-names>L. F.</given-names></string-name> (<year>2001</year>). <chapter-title>Theoretical Neuroscience: Computational and Mathematical Modeling of Neural Systems</chapter-title>. <source>Computational Neuroscience</source>. <publisher-name>MIT Press</publisher-name>, <publisher-loc>Cambridge, Mass</publisher-loc>.</mixed-citation></ref>
<ref id="c15"><label>[15]</label><mixed-citation publication-type="journal"><string-name><surname>Epsztein</surname>, <given-names>J.</given-names></string-name>, <string-name><surname>Brecht</surname>, <given-names>M.</given-names></string-name>, and <string-name><surname>Lee</surname>, <given-names>A. K.</given-names></string-name> (<year>2011</year>). <article-title>Intracellular determinants of hippocampal CA1 place and silent cell activity in a novel environment</article-title>. <source>Neuron</source>, <volume>70</volume>:<fpage>109</fpage>&#x2013;<lpage>20</lpage>.</mixed-citation></ref>
<ref id="c16"><label>[16]</label><mixed-citation publication-type="other"><string-name><surname>Fang</surname>, <given-names>C.</given-names></string-name>, <string-name><surname>Aronov</surname>, <given-names>D.</given-names></string-name>, <string-name><surname>Abbott</surname>, <given-names>L. F.</given-names></string-name>, and <string-name><surname>Mackevicius</surname>, <given-names>E.</given-names></string-name> (<year>2022</year>). <article-title>Neural learning rules for generating flexible predictions and computing the successor representation</article-title>. <source>bioRxiv</source>, page 2022.05.18.492543.</mixed-citation></ref>
<ref id="c17"><label>[17]</label><mixed-citation publication-type="journal"><string-name><surname>Farris</surname>, <given-names>S. M.</given-names></string-name> (<year>2011</year>). <article-title>Are mushroom bodies cerebellum-like structures?</article-title> <source>Arthropod Struct Dev</source>, <volume>40</volume>:<fpage>368</fpage>&#x2013;<lpage>79</lpage>.</mixed-citation></ref>
<ref id="c18"><label>[18]</label><mixed-citation publication-type="journal"><string-name><surname>Floyd</surname>, <given-names>R. W.</given-names></string-name> (<year>1962</year>). <article-title>Algorithm 97: Shortest path</article-title>. <source>Communications of the ACM</source>, <volume>5</volume>(<issue>6</issue>):<fpage>345</fpage>.</mixed-citation></ref>
<ref id="c19"><label>[19]</label><mixed-citation publication-type="journal"><string-name><surname>Frank</surname>, <given-names>L. M.</given-names></string-name>, <string-name><surname>Stanley</surname>, <given-names>G. B.</given-names></string-name>, and <string-name><surname>Brown</surname>, <given-names>E. N.</given-names></string-name> (<year>2004</year>). <article-title>Hippocampal Plasticity across Multiple Days of Exposure to Novel Environments</article-title>. <source>Journal of Neuroscience</source>, <volume>24</volume>(<issue>35</issue>):<fpage>7681</fpage>&#x2013;<lpage>7689</lpage>.</mixed-citation></ref>
<ref id="c20"><label>[20]</label><mixed-citation publication-type="journal"><string-name><surname>Freiwald</surname>, <given-names>W. A.</given-names></string-name> and <string-name><surname>Tsao</surname>, <given-names>D. Y.</given-names></string-name> (<year>2010</year>). <article-title>Functional compartmentalization and viewpoint generalization within the macaque face-processing system</article-title>. <source>Science</source>, <volume>330</volume>:<fpage>845</fpage>&#x2013;<lpage>51</lpage>.</mixed-citation></ref>
<ref id="c21"><label>[21]</label><mixed-citation publication-type="journal"><string-name><surname>Galtier</surname>, <given-names>M.</given-names></string-name>, <string-name><surname>Faugeras</surname>, <given-names>O.</given-names></string-name>, and <string-name><surname>Bressloff</surname>, <given-names>P.</given-names></string-name> (<year>2012</year>). <article-title>Hebbian Learning of Recurrent Connections: A Geometrical Perspective</article-title>. <source>Neural computation</source>, <volume>24</volume>:<fpage>2346</fpage>&#x2013;<lpage>83</lpage>.</mixed-citation></ref>
<ref id="c22"><label>[22]</label><mixed-citation publication-type="journal"><string-name><surname>Geerts</surname>, <given-names>J. P.</given-names></string-name>, <string-name><surname>Chersi</surname>, <given-names>F.</given-names></string-name>, <string-name><surname>Stachenfeld</surname>, <given-names>K. L.</given-names></string-name>, and <string-name><surname>Burgess</surname>, <given-names>N.</given-names></string-name> (<year>2020</year>). <article-title>A general model of hippocampal and dorsal striatal learning and decision making</article-title>. <source>Proceedings of the National Academy of Sciences</source>, <volume>117</volume>(<issue>49</issue>):<fpage>31427</fpage>&#x2013;<lpage>31437</lpage>.</mixed-citation></ref>
<ref id="c23"><label>[23]</label><mixed-citation publication-type="journal"><string-name><surname>Gollisch</surname>, <given-names>T.</given-names></string-name> and <string-name><surname>Meister</surname>, <given-names>M.</given-names></string-name> (<year>2010</year>). <article-title>Eye smarter than scientists believed: Neural computations in circuits of the retina</article-title>. <source>Neuron</source>, <volume>65</volume>:<fpage>150</fpage>&#x2013;<lpage>64</lpage>.</mixed-citation></ref>
<ref id="c24"><label>[24]</label><mixed-citation publication-type="journal"><string-name><surname>Grieves</surname>, <given-names>R. M.</given-names></string-name> and <string-name><surname>Jeffery</surname>, <given-names>K. J.</given-names></string-name> (<year>2017</year>). <article-title>The representation of space in the brain</article-title>. <source>Behavioural Processes</source>, <volume>135</volume>:<fpage>113</fpage>&#x2013;<lpage>131</lpage>.</mixed-citation></ref>
<ref id="c25"><label>[25]</label><mixed-citation publication-type="journal"><string-name><surname>Heisenberg</surname>, <given-names>M.</given-names></string-name> (<year>2003</year>). <article-title>Mushroom body memoir: From maps to models</article-title>. <source>Nature Reviews Neuroscience</source>, <volume>4</volume>(<issue>4</issue>):<fpage>266</fpage>&#x2013;<lpage>275</lpage>.</mixed-citation></ref>
<ref id="c26"><label>[26]</label><mixed-citation publication-type="journal"><string-name><surname>Hok</surname>, <given-names>V.</given-names></string-name>, <string-name><surname>Save</surname>, <given-names>E.</given-names></string-name>, <string-name><surname>Lenck-Santini</surname>, <given-names>P. P.</given-names></string-name>, and <string-name><surname>Poucet</surname>, <given-names>B.</given-names></string-name> (<year>2005</year>). <article-title>Coding for spatial goals in the prelimbic/infralimbic area of the rat frontal cortex</article-title>. <source>Proceedings of the National Academy of Sciences</source>, <volume>102</volume>(<issue>12</issue>):<fpage>4602</fpage>&#x2013;<lpage>4607</lpage>.</mixed-citation></ref>
<ref id="c27"><label>[27]</label><mixed-citation publication-type="journal"><string-name><surname>Hollup</surname>, <given-names>S. A.</given-names></string-name>, <string-name><surname>Molden</surname>, <given-names>S.</given-names></string-name>, <string-name><surname>Donnett</surname>, <given-names>J. G.</given-names></string-name>, <string-name><surname>Moser</surname>, <given-names>M.-B.</given-names></string-name>, and <string-name><surname>Moser</surname>, <given-names>E. I.</given-names></string-name> (<year>2001</year>). <article-title>Accumulation of Hippocampal Place Fields at the Goal Location in an Annular Watermaze Task</article-title>. <source>Journal of Neuroscience</source>, <volume>21</volume>(<issue>5</issue>):<fpage>1635</fpage>&#x2013;<lpage>1644</lpage>.</mixed-citation></ref>
<ref id="c28"><label>[28]</label><mixed-citation publication-type="journal"><string-name><surname>Jacobs</surname>, <given-names>L. F.</given-names></string-name> (<year>2012</year>). <article-title>From chemotaxis to the cognitive map: The function of olfaction</article-title>. <source>Proceedings of the National Academy of Sciences</source>, <volume>109</volume>(<issue>Supplement 1</issue>):<fpage>10693</fpage>&#x2013;<lpage>10700</lpage>.</mixed-citation></ref>
<ref id="c29"><label>[29]</label><mixed-citation publication-type="journal"><string-name><surname>Kjelstrup</surname>, <given-names>K. B.</given-names></string-name>, <string-name><surname>Solstad</surname>, <given-names>T.</given-names></string-name>, <string-name><surname>Brun</surname>, <given-names>V. H.</given-names></string-name>, <string-name><surname>Hafting</surname>, <given-names>T.</given-names></string-name>, <string-name><surname>Leutgeb</surname>, <given-names>S.</given-names></string-name>, <string-name><surname>Witter</surname>, <given-names>M. P.</given-names></string-name>, <string-name><surname>Moser</surname>, <given-names>E. I.</given-names></string-name>, and <string-name><surname>Moser</surname>, <given-names>M.-B.</given-names></string-name> (<year>2008</year>). <article-title>Finite scale of spatial representation in the hippocampus</article-title>. <source>Science</source>, <volume>321</volume>(<issue>5885</issue>):<fpage>140</fpage>&#x2013;<lpage>143</lpage>.</mixed-citation></ref>
<ref id="c30"><label>[30]</label><mixed-citation publication-type="journal"><string-name><surname>Knaden</surname>, <given-names>M.</given-names></string-name> and <string-name><surname>Graham</surname>, <given-names>P.</given-names></string-name> (<year>2016</year>). <article-title>The Sensory Ecology of Ant Navigation: From Natural Environments to Neural Mechanisms</article-title>. In <person-group person-group-type="editor"><string-name><surname>Berenbaum</surname>, <given-names>M. R.</given-names></string-name>, editor</person-group>, <source>Annual Review of Entomology</source>, volume <volume>61</volume>, pages <fpage>63</fpage>&#x2013;<lpage>76</lpage>.</mixed-citation></ref>
<ref id="c31"><label>[31]</label><mixed-citation publication-type="journal"><string-name><surname>Lashley</surname>, <given-names>K. S.</given-names></string-name> (<year>1912</year>). <article-title>Visual discrimination of size and form in the albino rat</article-title>. <source>Journal of Animal Behavior</source>, <volume>2</volume>(<issue>5</issue>):<fpage>310</fpage>&#x2013;<lpage>331</lpage>.</mixed-citation></ref>
<ref id="c32"><label>[32]</label><mixed-citation publication-type="journal"><string-name><surname>Li</surname>, <given-names>F.</given-names></string-name>, <string-name><surname>Lindsey</surname>, <given-names>J. W.</given-names></string-name>, <string-name><surname>Marin</surname>, <given-names>E. C.</given-names></string-name>, <string-name><surname>Otto</surname>, <given-names>N.</given-names></string-name>, <string-name><surname>Dreher</surname>, <given-names>M.</given-names></string-name>, <string-name><surname>Dempsey</surname>, <given-names>G.</given-names></string-name>, <string-name><surname>Stark</surname>, <given-names>I.</given-names></string-name>, <string-name><surname>Bates</surname>, <given-names>A. S.</given-names></string-name>, <string-name><surname>Pleijzier</surname>, <given-names>M. W.</given-names></string-name>, <string-name><surname>Schlegel</surname>, <given-names>P.</given-names></string-name>, <string-name><surname>Nern</surname>, <given-names>A.</given-names></string-name>, <string-name><surname>Takemura</surname>, <given-names>S.-y.</given-names></string-name>, <string-name><surname>Eckstein</surname>, <given-names>N.</given-names></string-name>, <string-name><surname>Yang</surname>, <given-names>T.</given-names></string-name>, <string-name><surname>Francis</surname>, <given-names>A.</given-names></string-name>, <string-name><surname>Braun</surname>, <given-names>A.</given-names></string-name>, <string-name><surname>Parekh</surname>, <given-names>R.</given-names></string-name>, <string-name><surname>Costa</surname>, <given-names>M.</given-names></string-name>, <string-name><surname>Scheffer</surname>, <given-names>L. K.</given-names></string-name>, <string-name><surname>Aso</surname>, <given-names>Y.</given-names></string-name>, <string-name><surname>Jefferis</surname>, <given-names>G. S.</given-names></string-name>, <string-name><surname>Abbott</surname>, <given-names>L. F.</given-names></string-name>, <string-name><surname>Litwin-Kumar</surname>, <given-names>A.</given-names></string-name>, <string-name><surname>Waddell</surname>, <given-names>S.</given-names></string-name>, and <string-name><surname>Rubin</surname>, <given-names>G. M.</given-names></string-name> (<year>2020</year>). <article-title>The connectome of the adult Drosophila mushroom body provides insights into function</article-title>. <source>eLife</source>, <volume>9</volume>:<fpage>e62576</fpage>.</mixed-citation></ref>
<ref id="c33"><label>[33]</label><mixed-citation publication-type="journal"><string-name><surname>Magee</surname>, <given-names>J. C.</given-names></string-name> and <string-name><surname>Grienberger</surname>, <given-names>C.</given-names></string-name> (<year>2020</year>). <article-title>Synaptic Plasticity Forms and Functions</article-title>. <source>Annual Review of Neuroscience</source>, <volume>43</volume>(<issue>1</issue>):<fpage>95</fpage>&#x2013;<lpage>117</lpage>.</mixed-citation></ref>
<ref id="c34"><label>[34]</label><mixed-citation publication-type="other"><string-name><surname>Moerland</surname>, <given-names>T. M.</given-names></string-name>, <string-name><surname>Broekens</surname>, <given-names>J.</given-names></string-name>, and <string-name><surname>Jonker</surname>, <given-names>C. M.</given-names></string-name> (<year>2020</year>). <article-title>Model-based reinforcement learning: A survey</article-title>. <source>arXiv preprint</source> arXiv:<pub-id pub-id-type="arxiv">2006.16712</pub-id>.</mixed-citation></ref>
<ref id="c35"><label>[35]</label><mixed-citation publication-type="journal"><string-name><surname>Morris</surname>, <given-names>R. G. M.</given-names></string-name>, <string-name><surname>Garrud</surname>, <given-names>P.</given-names></string-name>, <string-name><surname>Rawlins</surname>, <given-names>J. N. P.</given-names></string-name>, and <string-name><surname>O&#x2019;Keefe</surname>, <given-names>J.</given-names></string-name> (<year>1982</year>). <article-title>Place navigation impaired in rats with hippocampal lesions</article-title>. <source>Nature</source>, <volume>297</volume>(<issue>5868</issue>):<fpage>681</fpage>&#x2013;<lpage>683</lpage>.</mixed-citation></ref>
<ref id="c36"><label>[36]</label><mixed-citation publication-type="journal"><string-name><surname>Moser</surname>, <given-names>M.-B.</given-names></string-name>, <string-name><surname>Rowland</surname>, <given-names>D. C.</given-names></string-name>, and <string-name><surname>Moser</surname>, <given-names>E. I.</given-names></string-name> (<year>2015</year>). <article-title>Place Cells, Grid Cells, and Memory</article-title>. <source>Cold Spring Harbor Perspectives in Biology</source>, <volume>7</volume>(<issue>2</issue>):<fpage>a021808</fpage>.</mixed-citation></ref>
<ref id="c37"><label>[37]</label><mixed-citation publication-type="journal"><string-name><surname>M&#x00FC;ller</surname>, <given-names>M.</given-names></string-name> and <string-name><surname>Wehner</surname>, <given-names>R.</given-names></string-name> (<year>1988</year>). <article-title>Path integration in desert ants, Cataglyphis fortis</article-title>. <source>Proceedings of the National Academy of Sciences</source>, <volume>85</volume>(<issue>14</issue>):<fpage>5287</fpage>&#x2013;<lpage>5290</lpage>.</mixed-citation></ref>
<ref id="c38"><label>[38]</label><mixed-citation publication-type="journal"><string-name><surname>Muller</surname>, <given-names>R. U.</given-names></string-name>, <string-name><surname>Kubie</surname>, <given-names>J. L.</given-names></string-name>, and <string-name><surname>Saypoff</surname>, <given-names>R.</given-names></string-name> (<year>1991</year>). <article-title>The hippocampus as a cognitive graph (abridged version)</article-title>. <source>Hippocampus</source>, <volume>1</volume>(<issue>3</issue>):<fpage>243</fpage>&#x2013;<lpage>246</lpage>.</mixed-citation></ref>
<ref id="c39"><label>[39]</label><mixed-citation publication-type="journal"><string-name><surname>Muller</surname>, <given-names>R. U.</given-names></string-name>, <string-name><surname>Stead</surname>, <given-names>M.</given-names></string-name>, and <string-name><surname>Pach</surname>, <given-names>J.</given-names></string-name> (<year>1996</year>). <article-title>The hippocampus as a cognitive graph</article-title>. <source>The Journal of General Physiology</source>, <volume>107</volume>(<issue>6</issue>):<fpage>663</fpage>&#x2013;<lpage>694</lpage>.</mixed-citation></ref>
<ref id="c40"><label>[40]</label><mixed-citation publication-type="journal"><string-name><surname>Nyberg</surname>, <given-names>N.</given-names></string-name>, <string-name><surname>Duvelle</surname>, <given-names>&#x00C9;.</given-names></string-name>, <string-name><surname>Barry</surname>, <given-names>C.</given-names></string-name>, and <string-name><surname>Spiers</surname>, <given-names>H. J.</given-names></string-name> (<year>2022</year>). <article-title>Spatial goal coding in the hippocampal formation</article-title>. <source>Neuron</source>, <volume>110</volume>(<issue>3</issue>):<fpage>394</fpage>&#x2013;<lpage>422</lpage>.</mixed-citation></ref>
<ref id="c41"><label>[41]</label><mixed-citation publication-type="journal"><string-name><surname>Redish</surname>, <given-names>A. D.</given-names></string-name> (<year>2016</year>). <article-title>Vicarious trial and error</article-title>. <source>Nature Reviews Neuroscience</source>, <volume>17</volume>(<issue>3</issue>):<fpage>147</fpage>&#x2013;<lpage>159</lpage>.</mixed-citation></ref>
<ref id="c42"><label>[42]</label><mixed-citation publication-type="journal"><string-name><surname>Redish</surname>, <given-names>A. D.</given-names></string-name> and <string-name><surname>Touretzky</surname>, <given-names>D. S.</given-names></string-name> (<year>1998</year>). <article-title>The role of the hippocampus in solving the Morris water maze</article-title>. <source>Neural Computation</source>, <volume>10</volume>(<issue>1</issue>):<fpage>73</fpage>&#x2013;<lpage>111</lpage>.</mixed-citation></ref>
<ref id="c43"><label>[43]</label><mixed-citation publication-type="journal"><string-name><surname>Rosenberg</surname>, <given-names>M.</given-names></string-name>, <string-name><surname>Zhang</surname>, <given-names>T.</given-names></string-name>, <string-name><surname>Perona</surname>, <given-names>P.</given-names></string-name>, and <string-name><surname>Meister</surname>, <given-names>M.</given-names></string-name> (<year>2021</year>). <article-title>Mice in a labyrinth exhibit rapid learning, sudden insight, and efficient exploration</article-title>. <source>eLife</source>, <volume>10</volume>:<fpage>e66175</fpage>.</mixed-citation></ref>
<ref id="c44"><label>[44]</label><mixed-citation publication-type="journal"><string-name><surname>Santos-Pata</surname>, <given-names>D.</given-names></string-name> and <string-name><surname>Verschure</surname>, <given-names>P. F. M. J.</given-names></string-name> (<year>2018</year>). <article-title>Human Vicarious Trial and Error Is Predictive of Spatial Navigation Performance</article-title>. <source>Frontiers in Behavioral Neuroscience</source>, <volume>12</volume>:<fpage>237</fpage>.</mixed-citation></ref>
<ref id="c45"><label>[45]</label><mixed-citation publication-type="other"><string-name><surname>Sosa</surname>, <given-names>M.</given-names></string-name> and <string-name><surname>Giocomo</surname>, <given-names>L. M.</given-names></string-name> (<year>2021</year>). <article-title>Navigating for reward</article-title>. <source>Nature Reviews Neuroscience</source>, pages <fpage>1</fpage>&#x2013;<lpage>16</lpage>.</mixed-citation></ref>
<ref id="c46"><label>[46]</label><mixed-citation publication-type="journal"><string-name><surname>Stachenfeld</surname>, <given-names>K. L.</given-names></string-name>, <string-name><surname>Botvinick</surname>, <given-names>M. M.</given-names></string-name>, and <string-name><surname>Gershman</surname>, <given-names>S. J.</given-names></string-name> (<year>2017</year>). <article-title>The hippocampus as a predictive map</article-title>. <source>Nature Neuroscience</source>, <volume>20</volume>(<issue>11</issue>):<fpage>1643</fpage>&#x2013;<lpage>1653</lpage>.</mixed-citation></ref>
<ref id="c47"><label>[47]</label><mixed-citation publication-type="journal"><string-name><surname>Steck</surname>, <given-names>K.</given-names></string-name>, <string-name><surname>Hansson</surname>, <given-names>B. S.</given-names></string-name>, and <string-name><surname>Knaden</surname>, <given-names>M.</given-names></string-name> (<year>2009</year>). <article-title>Smells like home: Desert ants, Cataglyphis fortis, use olfactory landmarks to pinpoint the nest</article-title>. <source>Frontiers in Zoology</source>, <volume>6</volume>(<issue>1</issue>):<fpage>5</fpage>.</mixed-citation></ref>
<ref id="c48"><label>[48]</label><mixed-citation publication-type="journal"><string-name><surname>Sun</surname>, <given-names>X.</given-names></string-name>, <string-name><surname>Yue</surname>, <given-names>S.</given-names></string-name>, and <string-name><surname>Mangan</surname>, <given-names>M.</given-names></string-name> (<year>2020</year>). <article-title>A decentralised neural model explaining optimal integration of navigational strategies in insects</article-title>. <source>eLife</source>, <volume>9</volume>:<fpage>e54026</fpage>.</mixed-citation></ref>
<ref id="c49"><label>[49]</label><mixed-citation publication-type="book"><string-name><surname>Sutton</surname>, <given-names>R. S.</given-names></string-name> (<year>1990</year>). <chapter-title>Integrated architectures for learning, planning, and reacting based on approximating dynamic programming</chapter-title>. <source>In Machine Learning Proceedings 1990</source>, pages <fpage>216</fpage>&#x2013;<lpage>224</lpage>. <publisher-name>Elsevier</publisher-name>.</mixed-citation></ref>
<ref id="c50"><label>[50]</label><mixed-citation publication-type="book"><string-name><surname>Sutton</surname>, <given-names>R. S.</given-names></string-name> and <string-name><surname>Barto</surname>, <given-names>A. G.</given-names></string-name> (<year>2018</year>). <source>Reinforcement Learning: An Introduction</source>. <publisher-name>MIT Press</publisher-name>.</mixed-citation></ref>
<ref id="c51"><label>[51]</label><mixed-citation publication-type="journal"><string-name><surname>Tarsitano</surname>, <given-names>M.</given-names></string-name> (<year>2006</year>). <article-title>Route selection by a jumping spider (Portia labiata) during the locomotory phase of a detour</article-title>. <source>Animal Behaviour</source>, <volume>72</volume>(<issue>6</issue>):<fpage>1437</fpage>&#x2013;<lpage>1442</lpage>.</mixed-citation></ref>
<ref id="c52"><label>[52]</label><mixed-citation publication-type="journal"><string-name><surname>Thistlethwaite</surname>, <given-names>D.</given-names></string-name> (<year>1951</year>). <article-title>A critical review of latent learning and related experiments</article-title>. <source>Psychological Bulletin</source>, <volume>48</volume>(<issue>2</issue>):<fpage>97</fpage>&#x2013;<lpage>129</lpage>.</mixed-citation></ref>
<ref id="c53"><label>[53]</label><mixed-citation publication-type="journal"><string-name><surname>Tolman</surname>, <given-names>E. C.</given-names></string-name> (<year>1948</year>). <article-title>Cognitive maps in rats and men</article-title>. <source>Psychological Review</source>, <volume>55</volume>(<issue>4</issue>):<fpage>189</fpage>&#x2013;<lpage>208</lpage>. WOS:A1948UY69500001.</mixed-citation></ref>
<ref id="c54"><label>[54]</label><mixed-citation publication-type="journal"><string-name><surname>Webb</surname>, <given-names>B.</given-names></string-name> and <string-name><surname>Wystrach</surname>, <given-names>A.</given-names></string-name> (<year>2016</year>). <article-title>Neural mechanisms of insect navigation</article-title>. <source>Current Opinion in Insect Science</source>, <volume>15</volume>:<fpage>27</fpage>&#x2013;<lpage>39</lpage>.</mixed-citation></ref>
<ref id="c55"><label>[55]</label><mixed-citation publication-type="journal"><string-name><surname>Wilson</surname>, <given-names>M. A.</given-names></string-name> and <string-name><surname>McNaughton</surname>, <given-names>B. L.</given-names></string-name> (<year>1993</year>). <article-title>Dynamics of the hippocampal ensemble code for space</article-title>. <source>Science</source>, <volume>261</volume>(<issue>5124</issue>):<fpage>1055</fpage>&#x2013;<lpage>1058</lpage>.</mixed-citation></ref>
<ref id="c56"><label>[56]</label><mixed-citation publication-type="journal"><string-name><surname>Wolpert</surname>, <given-names>D. M.</given-names></string-name>, <string-name><surname>Miall</surname>, <given-names>R. C.</given-names></string-name>, and <string-name><surname>Kawato</surname>, <given-names>M.</given-names></string-name> (<year>1998</year>). <article-title>Internal models in the cerebellum</article-title>. <source>Trends in Cognitive Sciences</source>, <volume>2</volume>(<issue>9</issue>):<fpage>338</fpage>&#x2013;<lpage>347</lpage>.</mixed-citation></ref>
<ref id="c57"><label>[57]</label><mixed-citation publication-type="journal"><string-name><surname>Zhuang</surname>, <given-names>C.</given-names></string-name>, <string-name><surname>Yan</surname>, <given-names>S.</given-names></string-name>, <string-name><surname>Nayebi</surname>, <given-names>A.</given-names></string-name>, <string-name><surname>Schrimpf</surname>, <given-names>M.</given-names></string-name>, <string-name><surname>Frank</surname>, <given-names>M. C.</given-names></string-name>, <string-name><surname>DiCarlo</surname>, <given-names>J. J.</given-names></string-name>, and <string-name><surname>Yamins</surname>, <given-names>D. L. K.</given-names></string-name> (<year>2021</year>). <article-title>Unsupervised neural network models of the ventral visual stream</article-title>. <source>Proceedings of the National Academy of Sciences</source>, <volume>118</volume>(<issue>3</issue>).</mixed-citation></ref>
<ref id="c58"><label>[58]</label><mixed-citation publication-type="book"><string-name><surname>Zwick</surname>, <given-names>U.</given-names></string-name> (<year>2001</year>). <chapter-title>Exact and approximate distances in graphs &#x2014; A survey</chapter-title>. In <person-group person-group-type="editor"><string-name><surname>auf der Heide</surname>, <given-names>F. M.</given-names></string-name></person-group>, editor,<source>Algorithms &#x2014; ESA 2001</source>, pages <fpage>33</fpage>&#x2013;<lpage>48</lpage>. <publisher-name>Springer</publisher-name> <publisher-loc>Berlin Heidelberg</publisher-loc>.</mixed-citation></ref>
</ref-list>
<sec id="s11">
<title>Data and code availability</title>
<p>Data and code to reproduce the reported results are available at <ext-link ext-link-type="uri" xlink:href="https://github.com/markusmeister/Endotaxis-2022">https://github.com/markusmeister/Endotaxis-2022</ext-link>. Following acceptance of the manuscript they will be archived in a permanent public repository.</p>
</sec>
<ack>
<title>Acknowledgments</title>
</ack>
<sec id="s12">
<title>Funding</title>
<p>This work was supported by the Simons Collaboration on the Global Brain (grant 543015 to MM and 543025 to PP), by NSF award 1564330 to PP, and by a gift from Google to PP.</p>
</sec>
<sec id="s13">
<title>Author contributions</title>
<p>Conception of the study TZ, MR, PP, MM; Numerical work TZ, PP, MM; Analytical work MM; Drafting the manuscript MM; Revision and approval TZ, MR, PP, MM.</p>
</sec>
<sec id="s14">
<title>Competing interests</title>
<p>The authors declare no competing interests.</p>
</sec>
<sec id="s15">
<title>Colleagues</title>
<p>We thank Kyu Hyun Lee and Ruben Portugues for comments.</p>
</sec>
<fn-group>
<fn id="FN1"><label><sup>1</sup></label>
<p>We avoid the term &#x2018;place cell&#x2019; here because (1) that term has a technical meaning in the rodent hippocampus, whereas the arguments here extend to species that don&#x2019;t have a hippocampus; (2) all the cells in this network have a place field, but it is smallest for the point cells.</p></fn>
<fn id="FN2"><label><sup>2</sup></label>
<p>The mode switch effectively determines the animal&#x2019;s behavioral policy. In this report we do not consider how or why the animal chooses one mode or another.</p></fn>
<fn id="FN3"><label><sup>3</sup></label>
<p>Lumping the effects of noise into the readout of the goal signal enables some efficient calculations, see <xref ref-type="sec" rid="s10c">section A.3</xref>. In the circuit of <xref rid="fig1" ref-type="fig">Figure 1B</xref> one can envision that the readout noise gets added after the mode switch.</p></fn>
<fn id="FN4"><label><sup>4</sup></label>
<p>An irritating exception are one-way streets. For rodents, a jump off a branch is similarly irreversible.</p></fn>
<fn id="FN5"><label><sup>5</sup></label>
<p>Point cells and Map cells are the same in this picture</p></fn>
</fn-group>
</back>
</article>
